
//  ShoppingCarViewController.m
//  Guoan Test
//
//  Created by 王波 on 15/7/30.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTShoppingCarViewController.h"
#import "ELTShoppingCartTableViewCell.h"
#import "ELTFillOrderViewController.h"
#import "ELTShopCartHead.h"
#import "ELTShopCratFoot.h"

#import "ELTMyShopCart.h"
#import "ELTShopCartCommodityModel.h"
#import "ELTShopCartCouponModel.h"
#import "ELTShopCartCouponPickView.h"
#import "ELTShopDetailViewController.h"

@interface ELTShoppingCarViewController ()<UITableViewDataSource,UITableViewDelegate,PickViewDelegate,UIAlertViewDelegate>{
    NSMutableArray *_shopArray;//数据源
    ELTShopCartCouponPickView *_pickView;//代金券pickview
    NSMutableArray *_couponArray;//每个店铺的代金券列表
    NSMutableDictionary *_selectCouponDic;//选择的优惠券
    NSInteger _section;
    NSMutableArray *_couponNameArray;//应该显示的代金券列表
    NSMutableArray *_detailArray;
    double totalPrice;//底部总价格
    NSInteger deleteSection;
    NSInteger deleteRow;
    NSString *_Id;
}

@end

@implementation ELTShoppingCarViewController

-(void)viewWillAppear:(BOOL)animated{
    
    [self downRequest];
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    _isSelect = NO;
    // Do any additional setup after loading the view, typically from a nib.
    self.title = @"我的购物车";
    self.goBuybtn.layer.cornerRadius = 5.0;
    totalPrice = 0;
    [self downRequest];
    
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(reloadPrice:) name:@"reloadPrice" object:nil];
    
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(reloadSelect:) name:@"reloadSelect" object:nil];
    
    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self.view addSubview:self.indicator];
    
    _couponArray = [NSMutableArray array];
    _couponNameArray = [NSMutableArray array];

}

-(void)reloadSelect:(NSNotification *)sender{
    
    NSDictionary *dic = sender.userInfo;
    [self commoditySelect:[dic objectForKey:@"model"]];
    
}

-(void)reloadPrice:(NSNotification *)sender{
    
    NSDictionary *dic = sender.userInfo;
    [self changeNumOfShoppingCart:[dic objectForKey:@"model"]];
    
}

#pragma mark --UITableViewDataSource   返回行数
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:section];
    NSArray *array = shopCart.pro;
    return array.count;
    
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return _shopArray.count;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    ELTShopCartHead *view = [[[NSBundle mainBundle]loadNibNamed:@"ELTShopCartHead" owner:self options:nil]firstObject];
    view.frame = CGRectMake(0, 0, SCREENWIDTH, 40);
    view.shopSelectAll.tag = section;
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:section];
    view.shopTitleLabel.text = [NSString stringWithFormat:@"店铺：%@",shopCart.name];
    view.describLabel.text = [NSString stringWithFormat:@"%@分钟送达",shopCart.service_scope_id];
    [view.shopSelectAll addTarget:self action:@selector(shopSelectAll:) forControlEvents:UIControlEventTouchUpInside];
    view.shopSelectAll.tag = section;
    view.shopSelectAll.selected = shopCart.sele;
    view.jumpBtn.tag = section;
    [view.jumpBtn addTarget:self action:@selector(jumpBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    return view;
    
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:section];
    _couponArray = shopCart.coupon;
    ELTShopCratFoot *view;
    if (_couponArray.count>1) {
        view = [[[NSBundle mainBundle]loadNibNamed:@"ELTShopCartFoot" owner:self options:nil]lastObject];
        [view.couponBtn addTarget:self action:@selector(couponBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        view.couponBtn.tag = 1000+section;
        view.frame = CGRectMake(0, 0, SCREENWIDTH, 80);
    }else{
        view = [[[NSBundle mainBundle]loadNibNamed:@"ELTShopCartFoot" owner:self options:nil]firstObject];
        view.frame = CGRectMake(0, 0, SCREENWIDTH, 40);
    }
    
    view.couponLabel.text = shopCart.couponString == NULL || [shopCart.couponString isEqualToString:@"请选择代金券"]? @"请选择代金券" :[NSString stringWithFormat:@"%ld元代金券",(long)[shopCart.couponString integerValue]];
    view.totalPriceLabel.text = shopCart.realCouponPay;
    view.describeLabel.text = shopCart.msg;
    [self changeBottom];
    return view;
    
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 40;
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:section];
    if (shopCart.coupon.count>1) {
        return 90;
    }else{
        return 50;
    }

}
//#pragma mark --UITableViewDelegate
////返回cell高度
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return 100;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTShoppingCartTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ShoppingZhongTableViewCell"];
    cell =[[[NSBundle mainBundle]loadNibNamed:@"ELTShoppingCartTableViewCell" owner:nil options:nil] firstObject];
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:indexPath.section];
    ELTShopCartCommodityModel *model = [shopCart.pro objectAtIndex:indexPath.row];
    cell.model = model;
    return cell;
    
}

-(BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return YES;
    
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCellEditingStyle result = UITableViewCellEditingStyleDelete;
    return result;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        UIAlertView * alertView = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"是否删除该商品？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
        [alertView show];
        deleteSection = indexPath.section;
        deleteRow = indexPath.row;
    }
    
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    switch (buttonIndex) {
        case 0:
        {
            self.bgTabel.editing = UITableViewCellEditingStyleNone ;
        }
            break;
        case 1:
        {
            ELTMyShopCart *shopCart = [_shopArray objectAtIndex:deleteSection];
            ELTShopCartCommodityModel *model = [shopCart.pro objectAtIndex:deleteRow];
            [self.indicator startAnimatingActivit];
            [ELRequestSingle deleteShoppingCartRequest:^(BOOL sucess, id objc) {
                [self.indicator LoadSuccess];
                [self downRequest];
            } andUid:model.u_id];

        }
            break;
            
        default:
            break;
    }
}


- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return @"删除";
    
}

#pragma mark - 请求购物车列表
- (void)downRequest{
    [_shopArray removeAllObjects];
    [self.indicator startAnimatingActivit];
    [ELRequestSingle ShoppingCartWithRequest:^(BOOL sucess, id objc) {
        [self.indicator LoadSuccess];
        _shopArray = objc;
        [self countTotalPrice];
        [self changeBottom];
        [self judgeShopSelectAll];
        if (_shopArray.count == 0) {
            _allSelectBtn.enabled = NO;
        }else{
            _allSelectBtn.enabled = YES;
        }
        [self.bgTabel reloadData];
    }];
}

#pragma mark - 改变底部总价格和总数量
-(void)changeBottom{
    
    totalPrice = 0;
    NSInteger totalSum = 0;
    if (_shopArray) {
        for (ELTMyShopCart *shopCart in _shopArray) {
            totalSum+=shopCart.totalsnum;
            double price = [shopCart.realCouponPay doubleValue];
            totalPrice += price;
        }
        _countLabel.text = [NSString stringWithFormat:@"¥ %.2f",totalPrice];
        if (totalSum == 0) {
            [_goBuybtn setBackgroundColor:UIColorFromRGB(0x999999)];
            _goBuybtn.enabled = NO;
        }else{
            [_goBuybtn setBackgroundColor:UIColorFromRGB(0xda2c41)];
            _goBuybtn.enabled = YES;
        }
        [_goBuybtn setTitle:[NSString stringWithFormat:@"去下单（%ld）",(long)totalSum] forState:UIControlStateNormal];
    }
    
}

#pragma mark - 计算总价格
-(void)countTotalPrice{
    
    if ([[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"]) {
        
        NSMutableDictionary *selectCouponDic = [NSMutableDictionary dictionaryWithDictionary:[[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"]];
        for (ELTMyShopCart *shopCart in _shopArray) {
            if ([selectCouponDic objectForKey:shopCart.ID]) {
                NSString *couponID = [selectCouponDic objectForKey:shopCart.ID];
                for (ELTShopCartCouponModel *model in shopCart.coupon) {
                    if ([model.ID isEqualToString:couponID]) {
                        shopCart.couponString = model.content_price;
                        shopCart.realCouponPay = [NSString stringWithFormat:@"%.2f",[shopCart.realPay doubleValue] - [shopCart.couponString doubleValue]];
                        
                    }
                }
            }
        }
    }
}

#pragma mark - 判断所有的店铺按钮是否被勾选上
-(void)judgeShopSelectAll{
    
    NSInteger tag = 0;
    if (_shopArray) {
        for (ELTMyShopCart *shopCart in _shopArray) {
            if (shopCart.sele) {
                ++tag;
            }
        }
        if (tag == _shopArray.count) {
            _isSelect = YES;
            _allSelectBtn.selected = _isSelect;
        }else{
            _isSelect = NO;
            _allSelectBtn.selected = _isSelect;
        }
    }
    
}

#pragma mark - 数量加减请求
-(void)changeNumOfShoppingCart:(ELTShopCartCommodityModel *)model{
    
    [ELRequestSingle changeTheNumOfShoppingCartRequest:^(BOOL sucess, id objc) {
        [self.indicator LoadSuccess];
        [self downRequest];
    } andUid:model.u_id andPid:model.commodity_id andNum:model.count andSele:1];

}

#pragma mark - 选择某一个商品
-(void)commoditySelect:(ELTShopCartCommodityModel *)model{
    
    [ELRequestSingle commoditySelectRequest:^(BOOL sucess, id objc) {
        [self.indicator LoadSuccess];
        [self downRequest];
    } andUid:model.u_id andPid:model.commodity_id andSele:model.select andNum:model.count];
    
}


#pragma mark - 底部全选按钮
- (IBAction)allSelectionClick:(id)sender {
    
    _isSelect = !_isSelect;
    _allSelectBtn.selected = _isSelect;
    [self allSelect];
    
}

#pragma mark - 全选请求
-(void)allSelect{
    
    [ELRequestSingle allSelectRequest:^(BOOL sucess, id objc) {
        [self downRequest];
    } andSele:_isSelect];
    
}

#pragma mark -shopCartHead delegate 点击店铺勾选按钮
-(void)shopSelectAll:(UIButton *)button{
    
    ELTMyShopCart * shopCart = [_shopArray objectAtIndex:button.tag];
    shopCart.sele = !shopCart.sele;
    [self shopSelect:shopCart];
    NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:button.tag];
    [self.bgTabel reloadSections:indexSet withRowAnimation:UITableViewRowAnimationNone];
    [self changeBottom];
    [self downRequest];
}

#pragma mark - 店铺选择
-(void)shopSelect:(ELTMyShopCart *)model{

    [ELRequestSingle shopSelectRequest:^(BOOL sucess, id objc) {
        [self downRequest];
    } andSele:model.sele andeID:model.ID];

}

#pragma mark - 去下单按钮
- (IBAction)goBuyClick:(id)sender {
    
    ELTFillOrderViewController *view = [[ELTFillOrderViewController alloc]init];
    view.totalPrice = totalPrice;
    [self.navigationController pushViewController:view animated:YES];
    
}

#pragma mark - 返回按钮
- (void)back:(id)sender{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)couponBtnClick:(UIButton *)button{
    
    _section = button.tag;
    [self createPickview];
    
}

-(void)createPickview{
    
    NSInteger num = 0;
    [_couponNameArray removeAllObjects];
    _pickView = [[ELTShopCartCouponPickView alloc]initWithFrame:CGRectMake(0, 64, SCREENWIDTH, SCREENHEIGHT - 64)];
    _pickView.delegate = self;
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:_section - 1000];
    
    if ([[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"]) {
        _selectCouponDic = [NSMutableDictionary dictionaryWithDictionary:[[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"]];
        
        NSMutableArray *array = [NSMutableArray arrayWithArray:shopCart.coupon];
        
        NSString *couponID = [_selectCouponDic objectForKey:shopCart.ID];
        
        if  (!couponID) {
            
            int i = 0;
            for (;i<array.count;i++) {
                ELTShopCartCouponModel *model = [array objectAtIndex:i];
                for (NSString *couponID in [_selectCouponDic allValues]) {
                    if ([model.ID isEqualToString:couponID]) {
                        [array removeObject:model];
                        i = -1;
                        continue;
                    }
                }
                
            }
            
        }else{
            
            [_selectCouponDic removeObjectForKey:shopCart.ID];
            int i = 0;
            for (;i<array.count;i++) {
                ELTShopCartCouponModel *model = [array objectAtIndex:i];
                for (NSString *couponID in [_selectCouponDic allValues]) {
                    if ([model.ID isEqualToString:couponID]) {
                        [array removeObject:model];
                        i = -1;
                        continue;
                    }
                }
                
            }
        }
        
        _couponNameArray = array;
    }else{
        
        for (ELTShopCartCouponModel *model in shopCart.coupon) {
            [_couponNameArray addObject:model];
        }
        
    }
    _pickView.array = _couponNameArray;
    NSDictionary *dic = [[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"];
    _Id = dic[@"2"];
        for (int i = 0; i< _couponNameArray.count; i++) {
        ELTShopCartCouponModel *model = _couponNameArray[i];
        if ([model.ID isEqualToString:_Id]) {
            num = i;
        }
    }
   
    [_pickView.pickView selectRow:num  inComponent:0 animated:YES];
    [self.view addSubview:_pickView];
    
}

-(void)selectNum:(ELTShopCartCouponModel *)selectCoupon{
    
    ELTMyShopCart *shopCart = [_shopArray objectAtIndex:_section - 1000];
    
    if ([[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"]) {
        
        NSMutableDictionary *selectCouponDic = [NSMutableDictionary dictionaryWithDictionary:[[NSUserDefaults standardUserDefaults]objectForKey:@"selectCouponDic"]];
        
        if ([selectCoupon.content_price isEqualToString:@"0"]) {
            if ([selectCouponDic objectForKey:shopCart.ID]) {
                [selectCouponDic removeObjectForKey:shopCart.ID];
                [[NSUserDefaults standardUserDefaults]setObject:selectCouponDic forKey:@"selectCouponDic"];
                [[NSUserDefaults standardUserDefaults]synchronize];
                shopCart.couponString = @"请选择代金券";
                shopCart.realCouponPay = shopCart.realPay;
            }
            NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:_section - 1000];
            [self.bgTabel reloadSections:indexSet withRowAnimation:UITableViewRowAnimationNone];
            return;
        }
        
        [selectCouponDic setObject:selectCoupon.ID forKey:shopCart.ID];
        for (ELTShopCartCouponModel *model in shopCart.coupon) {
            if ([model.ID isEqualToString:selectCoupon.ID]) {
                shopCart.couponString = model.content_price;
            }
        }
        shopCart.realCouponPay = [NSString stringWithFormat:@"%.2f",[shopCart.realPay doubleValue] - [shopCart.couponString doubleValue]];
        
        [[NSUserDefaults standardUserDefaults]setObject:selectCouponDic forKey:@"selectCouponDic"];
        [[NSUserDefaults standardUserDefaults]synchronize];
       
    }else{
        
        if ([selectCoupon.content_price isEqualToString:@"0"]) {
            return;
        }
        
        _selectCouponDic = [[NSMutableDictionary alloc]init];
        [_selectCouponDic setValue:selectCoupon.ID forKey:shopCart.ID];
        for (ELTShopCartCouponModel *model in shopCart.coupon) {
            if ([model.ID isEqualToString:selectCoupon.ID]) {
                shopCart.couponString = model.content_price;
            }
        }
        shopCart.realCouponPay = [NSString stringWithFormat:@"%.2f",[shopCart.realPay doubleValue] - [shopCart.couponString doubleValue]];
      [[NSUserDefaults standardUserDefaults]setObject:_selectCouponDic forKey:@"selectCouponDic"];
        
        [[NSUserDefaults standardUserDefaults]synchronize];
    
        
    }
    
    NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:_section - 1000];
    [self.bgTabel reloadSections:indexSet withRowAnimation:UITableViewRowAnimationNone];
}

-(void)jumpBtnClick:(UIButton *)button{
    
    NSArray *viewArray = self.navigationController.viewControllers;
    for (BaseViewController *viewController in viewArray) {
        if ([viewController isKindOfClass:[ELTShopDetailViewController class]]) {
            
            ELTShopDetailViewController *shopDeatil = (ELTShopDetailViewController *)viewController;
            ELTMyShopCart *cart = [_shopArray objectAtIndex:button.tag];
            shopDeatil.shoppe_id = cart.ID;
            [ELRequestSingle shopDetailWithRequest:^(BOOL sucess, id objc) {
                
                _detailArray = objc;
                shopDeatil.dataArray = _detailArray;
                [self.navigationController pushViewController:shopDeatil animated:YES];
                
            } andShoppe_id:cart.ID];
            return;
        }
    }
    
    ELTMyShopCart *cart = [_shopArray objectAtIndex:button.tag];
    ELTShopDetailViewController *view = [[ELTShopDetailViewController alloc]init];
    view.shoppe_id = cart.ID;
    [ELRequestSingle shopDetailWithRequest:^(BOOL sucess, id objc) {
        
        _detailArray = objc;
        view.dataArray = _detailArray;
        [self.navigationController pushViewController:view animated:YES];
        
    } andShoppe_id:cart.ID];
    
}

@end