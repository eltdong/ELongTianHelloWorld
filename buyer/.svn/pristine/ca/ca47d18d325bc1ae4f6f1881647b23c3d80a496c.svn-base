//
//  CommentListViewController.m
//  GuoanBuyer
//
//  Created by 易龙天 on 15/8/21.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTEvaluateListViewController.h"
#import "ELTCommodityDetailFourCell.h"
#import "ELTCommodityDetailModel.h"
#import "ELTerviceDetailModel.h"
#import "ELTEvaluationListModel.h"

@interface ELTEvaluateListViewController ()
@property (nonatomic, strong) NSMutableArray * dataArr;
@property (nonatomic, assign) NSInteger page;
@end

@implementation ELTEvaluateListViewController
- (void)viewWillAppear:(BOOL)animated{
    
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    _dataArr = [NSMutableArray array];
    _page = 1;
    [self.view addSubview:self.indicator];
    [self drop_on];
    [self drop_down];
    self.indicator = [[ActivityIndicator alloc]initWithFrame:CGRectMake(0, -50, SCREENWIDTH, SCREENHEIGHT) LabelText:@"正在加载..." withdelegate:self withType:ActivityIndicatorLogin andAction:nil];
    
    [self.view addSubview:self.indicator];
    //    [self downRequestWithEvaluation];
}

/**
 * UITableView +   传统
 */
- (void)drop_on
{
    __weak typeof(self) weakSelf = self;
    // 添加传统的上拉刷新
    // 设置回调（一旦进入刷新状态就会调用这个refreshingBlock）
    
    [self.mainTableView addLegendFooterWithRefreshingBlock:^{
        weakSelf.page ++;
        [weakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [weakSelf downRequestWithEvaluation];
    }];
}
/**
 * UITableView + 下拉刷新 传统
 */
- (void)drop_down
{
    __weak typeof(self) weakSelf = self;
    // 添加传统的下拉刷新
    // 设置回调（一旦进入刷新状态就会调用这个refreshingBlock）
    [self.mainTableView addLegendHeaderWithRefreshingBlock:^{
        _page = 1;
        [weakSelf.dataArr removeAllObjects];
        [weakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [weakSelf downRequestWithEvaluation];
        // 马上进入刷新状态
    }];
}

#pragma mark - 评价的数据请求
-(void)downRequestWithEvaluation{
    [self.indicator startAnimatingActivit];
    if (_type ==CommodityEvaluation) {
        [ELRequestSingle typeDetailWithREquest:^(BOOL sucess, id objc) {
            [self.indicator LoadSuccess];
            [_dataArr addObjectsFromArray:objc];
            if (_dataArr.count == 0) {
                [self.mainTableView.footer noticeNoMoreData];
            }else{
                [self.mainTableView.header endRefreshing];
                [self.mainTableView.footer endRefreshing];
            }
            if(_dataArr.count < 10){
                [self.mainTableView removeFooter];
            }
            
            [_mainTableView reloadData];
        } andid:_shopID andtype:_btnType andPage:[NSString stringWithFormat:@"%ld",_page]];
    }else if(_type ==ServicePelple){
        
        [ELRequestSingle screenRequestWithBlock:^(BOOL sucess, id objc) {
            [self.indicator LoadSuccess];
            NSArray *array = @[objc];
            [_dataArr addObjectsFromArray:array];
            
            
            
            if (_dataArr.count == 0) {
                [self.mainTableView.footer noticeNoMoreData];
            }else{
                [self.mainTableView.header endRefreshing];
                [self.mainTableView.footer endRefreshing];
            }
            if(_dataArr.count < 10){
                [self.mainTableView removeFooter];
            }
            
            [_mainTableView reloadData];
            
            
        } andSerper_id:_shopID andType:[_btnType integerValue] andPlugin:@"com_shopService" andRow:10 andPage:_page];
        
    }else{
        
        [ELRequestSingle screenRequestWithBlock:^(BOOL sucess, id objc) {
            NSArray *array = @[objc];
            
            [self.indicator LoadSuccess];
            [_dataArr addObjectsFromArray:array];
            
            if (_dataArr.count == 0) {
                [self.mainTableView.footer noticeNoMoreData];
            }else{
                [self.mainTableView.header endRefreshing];
                [self.mainTableView.footer endRefreshing];
            }
            if(_dataArr.count < 10){
                [self.mainTableView removeFooter];
            }
            
            [_mainTableView reloadData];
            
            
        } andLink_id:_shopID andType:[_btnType integerValue] andPlugin:@"com_shopService" andRow:10 andPage:_page];
        
    }
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (self.dataArr.count > 0) {
        if (_type==CommodityEvaluation) {
            ELTCommodityDetailModel * cdModel = [[ELTCommodityDetailModel alloc]init];
            cdModel = self.dataArr[0];
            return  OBJC(cdModel.review)?cdModel.review.count:2;
            
        }else if(_type == ServicePelple){
            ELTerviceDetailModel *model = [[ELTerviceDetailModel alloc] init];
            model = _dataArr[0];
            
            return OBJC(model.review)?model.review.count:0;

        }else{
            ELTEvaluationListModel *model = [[ELTEvaluationListModel alloc] init];
            model = _dataArr[0];
            return OBJC(model.review)?model.review.count:0;

        }
    }else{
        return 0;
    }
    
    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static  NSString * cellId = @"SDFF";
    ELTCommodityDetailFourCell * cell = [tableView dequeueReusableCellWithIdentifier:cellId ];
    if (!cell) {
        cell = [[ELTCommodityDetailFourCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
    }
    if (_type==CommodityEvaluation) {
        ELTCommodityDetailModel * cdModel = [[ELTCommodityDetailModel alloc]init];
        cdModel = _dataArr[0];
        cell.reviewModel = cdModel.review[indexPath.row];
        
    }else if(_type == ServicePelple){
        ELTerviceDetailModel *model = [[ELTerviceDetailModel alloc] init];
        model = _dataArr[0];
        cell.serModer = model.review[indexPath.row];
       
    }else{
        ELTEvaluationListModel *model = [[ELTEvaluationListModel alloc] init];
        model = _dataArr[0];
        cell.model = model.review[indexPath.row];
    
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    UITableViewCell *cell = [self tableView: tableView cellForRowAtIndexPath:indexPath ];
    return cell.frame.size.height;
    
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
}
#pragma mark - 评价按钮全部的点击事件
-(void)jumpNextVc:(NSString*)str{
    self.btnType = str;
    [_dataArr removeAllObjects];
    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self downRequestWithEvaluation];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (void)back:(id)sender{
    [self.navigationController popViewControllerAnimated:YES];
}



@end
