//
//  OrderSubscribeViewController.m
//  GuoanBuyer
//
//  Created by elongtian on 15/7/29.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTOrderSubLimitViewController.h"
#import "ELTOrderSubscribeOneCell.h"
#import "ELTEditeOrderOneCell.h"
#import "ELTOrderSubscribeTwoCell.h"
#import "ELTOrderSubscribeThreeCell.h"
#import "ELTOrderSubscribeFourCell.h"
#import "ELTAddress.h"
#import "ELTSellerListViewController.h"
#import "ELTSelectServiceTimeViewController.h"
#import "ELTServiceOrderViewController.h"
/**
 *  dong
 *
 *  @return 8-3
 */
//#import "SelectServiceTimeFirViewController.h"
#import "ELTSelectServiceTimeViewController.h"
#import "ELTSelectServicePersonelViewController.h"
#import "ELTFillOrderViewController.h"
#import "ELTDiscountCoupon.h"
#define CELL_TAG 864654
#define STR @"请选择代金券"
@interface ELTOrderSubLimitViewController (){
    NSArray *_imageArray;
    NSArray *_labelNameArray;
    
    
    NSMutableArray * _pickerViewDataArr;
    NSString * _serviceTime;
    NSString * _serviceId;
    
    NSString * _sKey;
    NSString * _eKey;
    NSString * _mouth;
    NSString * _ID;
    
    ELTEShopDateModel * _timeModel;
    BOOL _isVouchers;
}

@end

@implementation ELTOrderSubLimitViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.title = @"服务预约";
    self.bottomButton.layer.cornerRadius = 6.0;
    _imageArray = @[@[@"elt_addr_icos2.png",@"elt_clocks.png",@"elt_yhq_ico.png"],@[@"elt_bz.png",@"elt_persons.png"]];
    _labelNameArray = @[@"预约时间",@"请选择代金券"];
    self.bgTable.sectionHeaderHeight = 0;
    self.bgTable.sectionFooterHeight = 10;
    self.bgTable.tableHeaderView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 0, -1)];
    [self downRequestPickerView];
    
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (indexPath.section == 0) {
        
        if (indexPath.row == 0) {
            return 90;
        }else{
            return 50;
        }
        
    }else{
        return 50;
    }
    
}

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return 2;
    
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    if (section == 0) {
        return 3;
    }else{
        return 4;
    }
    
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (indexPath.section == 0) {
        
        if (indexPath.row == 0) {
            
            ELTEditeOrderOneCell *cell = [tableView dequeueReusableCellWithIdentifier:@"EditeOrderOneCell"];
            if (!cell) {
                cell = [[[NSBundle mainBundle]loadNibNamed:@"ELTEditeOrderOneCell" owner:self options:nil]lastObject];
            }
            cell.iconImage.image = [UIImage imageNamed:[[_imageArray objectAtIndex:indexPath.section] objectAtIndex:indexPath.row]];
            cell.nameLabel.text = [ELTAddress sharedAddress].AddressModel.name;
            cell.telLabel.text = [ELTAddress sharedAddress].AddressModel.mobilephone;
            cell.addLabel.text = [ELTAddress sharedAddress].AddressModel.address;
            return cell;
            
        }else{
            
            ELTOrderSubscribeOneCell *cell = [tableView dequeueReusableCellWithIdentifier:@"OrderSubscribeOneCell"];
            if (!cell) {
                cell = [[[NSBundle mainBundle]loadNibNamed:@"ELTOrderSubscribeOneCell" owner:self options:nil]lastObject];
            }
            cell.image.image = [UIImage imageNamed:[[_imageArray objectAtIndex:indexPath.section] objectAtIndex:indexPath.row]];
            cell.label.text = [_labelNameArray objectAtIndex:indexPath.row - 1];
            if (indexPath.row == 1) {
                cell.tag = CELL_TAG;
            }else if(indexPath.row == 2){
                if(_isVouchers){
                    cell.vouchers.hidden = YES;
                }else{
                    
                    cell.vouchers.hidden = NO;
                }
                cell.tag = CELL_TAG + 1;
            }
            cell.topLine.hidden = YES;
            return cell;
            
        }
        
    }else{
        
            if (indexPath.row == 0) {
                ELTOrderSubscribeTwoCell *cell = [tableView dequeueReusableCellWithIdentifier:@"OrderSubscribeTwoCell"];
                if (!cell) {
                    cell = [[[NSBundle mainBundle]loadNibNamed:@"ELTOrderSubscribeTwoCell" owner:self options:nil]lastObject];
                }
                cell.iconImage.image = [UIImage imageNamed:[[_imageArray objectAtIndex:indexPath.section] objectAtIndex:indexPath.row]];
                cell.tag = CELL_TAG + 20;
                return cell;
            }else if(indexPath.row == 1){
                ELTOrderSubscribeOneCell *cell = [tableView dequeueReusableCellWithIdentifier:@"OrderSubscribeOneCell"];
                if (!cell) {
                    cell = [[[NSBundle mainBundle]loadNibNamed:@"ELTOrderSubscribeOneCell" owner:self options:nil]lastObject];
                }
                cell.topLine.hidden = YES;
                cell.label.text = @"系统推荐服务人员";
                cell.image.image = [UIImage imageNamed:[[_imageArray objectAtIndex:indexPath.section] objectAtIndex:indexPath.row]];
                cell.imgWidthConstraint.constant = 15;
                cell.imgHeightConstraint.constant = 15;
                cell.tag = CELL_TAG + 10;
                return cell;
            }else if(indexPath.row == 2){
                ELTOrderSubscribeThreeCell *cell = [tableView dequeueReusableCellWithIdentifier:@"OrderSubscribeThreeCell"];
                if (!cell) {
                    cell = [[[NSBundle mainBundle]loadNibNamed:@"ELTOrderSubscribeThreeCell" owner:self options:nil]lastObject];
                }
                cell.topLine.hidden = YES;
                
                return cell;
            }else{
                
                ELTOrderSubscribeFourCell *cell = [tableView dequeueReusableCellWithIdentifier:@"OrderSubscribeFourCell"];
                if (!cell) {
                    cell = [[[NSBundle mainBundle]loadNibNamed:@"ELTOrderSubscribeFourCell" owner:self options:nil]lastObject];
                }
                return cell;
                
            }
        
        
    }
    
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (indexPath.section == 0 && indexPath.row == 1) {
////        选时长  有限
//        SelectServiceTimeFirViewController *sstf =[[SelectServiceTimeFirViewController alloc]init];
//        [self.navigationController pushViewController:sstf animated:YES];
//        
        ELTSelectServiceTimeViewController * ssts = [[ELTSelectServiceTimeViewController alloc] init];
//        ssts.serviceTime = self.serviceTime;
        ssts.isLimited = self.isLimited;
        ssts.shoppe_id = self.shoppe_id;
        ssts.block = ^(NSString * mouth,NSString * week,NSString * day,ELTEShopDateModel * model){
            ELTOrderSubscribeOneCell *cell = (ELTOrderSubscribeOneCell *)[_bgTable viewWithTag:CELL_TAG];
            
//            cell.label.textAlignment = NSTextAlignmentRight;
            cell.label.text = [NSString stringWithFormat:@"%@(%@)     %@",mouth,week,day];
            _sKey = model.skey;
            _eKey = model.ekey;
            _mouth = mouth;
            _timeModel = model;
            
            ELTOrderSubscribeOneCell * cell1 = (ELTOrderSubscribeOneCell *)[_bgTable viewWithTag:CELL_TAG +10];
            cell1.imgWidthConstraint.constant = 15;
            cell1.imgHeightConstraint.constant = 15;
            cell1.image.image = [UIImage imageNamed:[[_imageArray objectAtIndex:1] objectAtIndex:1]];
            cell1.label.text = @"系统推荐服务人员";

        };
        
        [self.indicator setIndicatorType:ActivityIndicatorLogin];
        [self.indicator startAnimatingActivit];
        [ELRequestSingle getServiceChoosetimeRequestWithBlock:^(BOOL sucess, id objc) {
            [self.indicator LoadSuccess];
            ssts.choosetimeArr = [NSMutableArray array];
            for (NSNumber * num in objc) {
                [ssts.choosetimeArr addObject:[NSString stringWithFormat:@"%@",num]];
            }
          
            ssts.serper_id = self.model.serviceper;
            [self.navigationController pushViewController:ssts animated:YES];
        } andSer_id:self.model.Id];
        
    }
    if (indexPath.section == 0 && indexPath.row == 2 && _isVouchers == YES) {
        if (_pickerViewDataArr.count > 0) {
            [UIView animateWithDuration:1 animations:^{
                self.pickerView_bjView.hidden = NO;
            }];
        }else{
            [self.indicator setIndicatorType:ActivityIndicatorLogin];
            [self downRequestPickerView];
            [UIView animateWithDuration:1 animations:^{
                self.pickerView_bjView.hidden = NO;
            }];
        }
    }
    if (indexPath.section == 1 && indexPath.row == 1) {
        if(_sKey == nil){
            [self showAlertViewWith:@"请选择时间"];
        }else{
            ELTSelectServicePersonelViewController *view = [[ELTSelectServicePersonelViewController alloc]init];
            view.block = ^(NSString * img,NSString * name,NSString * ID){
                ELTOrderSubscribeOneCell * cell = (ELTOrderSubscribeOneCell *)[tableView viewWithTag:CELL_TAG +10];
                cell.imgWidthConstraint.constant = 30;
                cell.imgHeightConstraint.constant = 30;
                [cell.image setImageWithURL:[NSURL URLWithString:img] placeholderImage:nil];
                cell.label.text = name;
                _ID = ID;
            };
            view.skey = _sKey;
            view.ekey = _eKey;
            view.ID = self.model.Id;
            view.date = _mouth;
            [self.navigationController pushViewController:view animated:YES];
        }
        
    }
    
}
#pragma mark homebtn yd
-(void)home:(id)sender{
    
//    SelectServiceTimeSecViewController * ssts = [[SelectServiceTimeSecViewController alloc] init];
//    ssts.isLimited = NO;
//    [self.navigationController pushViewController:ssts animated:YES];
    
}

-(void)back:(id)sender{
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark - 马上预约 yd
- (IBAction)bottomBtn:(id)sender {
    if (_mouth == nil) {
        [self showAlertViewWith:@"请选择时间"];
        return;
    }
    if (_ID == nil) {
        [self showAlertViewWith:@"请选择人员"];
        return;
    }
    NSNumber * total_price;
    if(_serviceTime == nil || [_serviceTime isEqualToString:STR] ){
        total_price = [NSNumber numberWithDouble:[self.model.promotion_price doubleValue]];
    }else{
        total_price = [NSNumber numberWithDouble:[self.model.promotion_price doubleValue] - [_serviceTime doubleValue]];
    }
    
    NSNumber * price = [NSNumber numberWithDouble:[self.model.promotion_price doubleValue]];
    NSString * start_time = _timeModel.sDate;
    NSString * end_time = _timeModel.eDate;
    ELTOrderSubscribeTwoCell * cell = (ELTOrderSubscribeTwoCell *)[_bgTable viewWithTag:CELL_TAG + 20];
    NSString * str;
    if ([cell.remarkField.text isEqualToString:@""]) {
        str = @"无";
    }else{
        str = cell.remarkField.text;
    }
    NSNumber * service_personal_idNumber = [NSNumber numberWithInt:[_ID intValue]];
    
//    service[eshop_id]	int	N	店铺ID
//    service[address]	String	N	收货地址
//
//    service[appointment_start_time]
//    datetime	N	预约开始时间	格式
//    08:00
//    service[appointment_end_time]	datetime	N	预约结束时间	格式
//    10:00
    
//    service[service_time]	String	N	服务时间范围
//    service[consignee]	String	N	收货人
//    service[consignee_phone]	String	N	收货人电话
//    service[order_remarks]	String	N	下单备注
//    service[coupon_id]	int	N	代金卷ID
//    service[total_price]	double(11,0)	N	应付金额
//    service[price]	double(11,0)	N	服务金额
//    请求字段说明（derdetail）
//    参数	类型	是否可空	含义	备注
//    derdetail[service_id]	int	N	服务ID
//    derdetail[price]	double(11,0)	N	服务单价
//    derdetail[service_name]	String	N	服务名称
//    请求字段说明（personal）
//    参数	类型	是否可空	含义	备注
//    personal[service_personal_id]	int	N	服务人员ID
//    personal[eshop_id]	int	N	店铺ID
//    personal[appointment_start_time]	time	N	预约开始时间	格式
//    08:00
//    personal[appointment_end_time]	time	N	预约结束时间	格式
//    10:00
//    personal[appointment_date]	date	N	预约日期	格式
//    2015-09-06
//    personal[appointment_skey]	int	N	 预约开始时间KEY	16
//    personal[appointment_ekey]	int	N	预约结束时间KEY	18
//    service[service_personal_id]	int	N	服务人员ID
    
    
    
    NSMutableDictionary * dic = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                                 [NSNumber numberWithInt:[self.model.eshop_id intValue]],@"service[eshop_id]",
                                 [ELTAddress sharedAddress].AddressModel.address,@"service[address]",
                                 start_time,@"service[appointment_start_time]",
                                 end_time,@"service[appointment_end_time]",
                                 self.model.service_time,@"service[service_time]",
                                 
                                 [ELTAddress sharedAddress].AddressModel.name,@"service[consignee]",
                                 [ELTAddress sharedAddress].AddressModel.mobilephone,@"service[consignee_phone]",
                                 str,@"service[order_remarks]",//备注
                                 
                                 total_price,@"service[total_price]",
                                 
                                 price,@"service[price]",
                                 [NSNumber numberWithInt:[self.model.Id intValue]],@"derdetail[service_id]",
                                 price,@"derdetail[price]",
                                 self.model.eshopname,@"derdetail[service_name]",
                                 service_personal_idNumber,@"personal[service_personal_id]",
                                 
                                 NSUserDefaults_Member_id,@"personal[eshop_id]",
                                 start_time,@"personal[appointment_start_time]",
                                 end_time,@"personal[appointment_end_time]",
                                 _mouth,@"personal[appointment_date]",
                                 [NSNumber numberWithInt:[_sKey intValue]],@"personal[appointment_skey]",
                                 
                                 [NSNumber numberWithInt:[_eKey intValue]],@"personal[appointment_ekey]",
                                 service_personal_idNumber,@"service[service_personal_id]",
                                 @"limitedorder",@"task",
                                 nil];
    
    ELTOrderSubscribeOneCell *cell1 = (ELTOrderSubscribeOneCell *)[_bgTable viewWithTag:CELL_TAG+1];
    //    cell.label.textAlignment = NSTextAlignmentRight;
    if ([cell1.label.text isEqualToString:STR]) {
        
    }else{
        [dic setObject:[NSNumber numberWithInt:[_serviceId intValue]] forKey:@"service[coupon_id]"];
    }
    
   // NSLog(@"%@",dic);
    [ELRequestSingle infiniteorderRequestWithBlock:^(BOOL sucess, id objc) {
        if (objc != nil) {
            ELTOrderSuccessViewController *view = [[ELTOrderSuccessViewController alloc]init];
            view.delegate = self;
            [self.navigationController pushViewController:view animated:YES];
        }
    } andDic:dic];

//    FillOrderViewController *view = [[FillOrderViewController alloc]init];
//    [self.navigationController pushViewController:view animated:YES];
    
}
#pragma mark - OrderSuccessViewControllerDelegate
-(void)first:(UIButton *)button{
    ELTServiceOrderViewController *view = [[ELTServiceOrderViewController alloc]init];
    view.currentIndex = 1;
    [self.navigationController pushViewController:view animated:YES];
    
}
-(void)second:(UIButton *)button{
    [self.navigationController popToViewController:[self.navigationController.viewControllers objectAtIndex:self.navigationController.viewControllers.count - 4] animated:YES];
}

#pragma mark - 代金券pickerView 相关方法

- (void)downRequestPickerView{
    
    [self.indicator startAnimatingActivit];
    [ELRequestSingle getCouponListRequestBlock:^(BOOL sucess, id objc) {
        [self.indicator LoadSuccess];
        _pickerViewDataArr = objc;
        if (_pickerViewDataArr.count > 0) {
            _isVouchers = YES;
            ELTOrderSubscribeOneCell * cell = (ELTOrderSubscribeOneCell *)[_bgTable viewWithTag:CELL_TAG + 1];
            cell.vouchers.hidden = YES;
            [self createUIPickerView];
        }else{
            _isVouchers = NO;
        }
    } andShoppe_id:self.shoppe_id andPrice:self.price];
    
}


-(void)createUIPickerView{
//    _pickerViewDataArr = [NSMutableArray array];
//    NSArray * arr =@[@"2小时",@"2.5小时",@"3小时",@"3.5小时",@"4小时"];
//    //    NSArray * arr1 =@[@"2",@"2.5",@"3",@"3.5",@"4"];
//    [_pickerViewDataArr addObjectsFromArray:arr];
    _serviceTime = STR;
    self.pickerView.delegate = self;
    self.pickerView.dataSource = self;
    
    [self.pickerView reloadAllComponents];
    
    self.view.backgroundColor = UIColorFromRGB(0xf5f5f5);
    
}

#pragma pickerDelegate
-(NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{
    return 1;
}
-(NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component{
    return _pickerViewDataArr.count + 1;
}
- (NSString *)pickerView:(UIPickerView *)pickerView
             titleForRow:(NSInteger)row
            forComponent:(NSInteger)component {
    //    if (component == 0)
    //        return [self.breadTypes objectAtIndex:row];//设置第一列的内容(数组的self不能少)
    //    return [self.fillingTypes objectAtIndex:row];//设置第二列的内容(数组的self不能少)
    if (row == 0) {
        return STR;
    }
    return [NSString stringWithFormat:@"%@元代金券",[[_pickerViewDataArr objectAtIndex:row -1] content_price]];
}

-(CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component{
    return 42.5f;
}
-(void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component{
    if (row == 0) {
        _serviceTime = STR;
    }else{
        ELTDiscountCoupon * model =_pickerViewDataArr[row - 1];
        NSString * str = model.content_price;
        _serviceTime = str;
        _serviceId = model.Id;
    }
}



#pragma mark - 代金券 确定取消键
- (IBAction)pickerViewOKBtnClicked:(id)sender {
    ELTOrderSubscribeOneCell *cell = (ELTOrderSubscribeOneCell *)[_bgTable viewWithTag:CELL_TAG+1];
//    cell.label.textAlignment = NSTextAlignmentRight;
    if([_serviceTime isEqualToString:STR]){
        cell.label.text = _serviceTime;
    }else{
        cell.label.text = [NSString stringWithFormat:@"%@元代金券",_serviceTime];
    }
    [UIView animateWithDuration:1 animations:^{
        self.pickerView_bjView.hidden = YES;
    }];
    
}
- (IBAction)pickerViewCancleBtnClicked:(id)sender {
    [UIView animateWithDuration:1 animations:^{
        self.pickerView_bjView.hidden = YES;
    }];
}

//-(void)viewDidDisappear:(BOOL)animated{
//    
//    [_view removeFromSuperview];
//    
//}

@end
