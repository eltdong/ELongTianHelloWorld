//
//  SelectServiceTimeSecViewController.m
//  Guoan Test
//
//  Created by elongtian on 15/7/29.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTSelectServiceTimeViewController.h"
#import "ELTSelectTimeCollectionViewCell.h"
#import "ELTSelectServiceTimeViewController.h"
#import "ELTSelectServicePersonelViewController.h"
#import "ELTOrderSubLimitViewController.h"
#import "ELTWeekTimeModel.h"
#define VIEW_TAG 562222156
#define TOTALWIDTH @"totalWidth"

#define CELL_TAG 5214555
@interface ELTSelectServiceTimeViewController ()<UICollectionViewDataSource,UICollectionViewDelegateFlowLayout,builtinBtnDelegate>{
    NSMutableArray * _selectArr;
    NSMutableArray * _mItemInfoArray;
    NSInteger mTotalWidth;
    NSInteger _weekTimeCount;
    NSString * _task;
    NSString * _num;
    NSString * _serper_id;
}
@property (strong, nonatomic) IBOutlet UIView *top_view;
@property (strong, nonatomic) IBOutlet UIView *top_view_two;
//服务时间
@property (nonatomic,strong) NSMutableArray * dataArr;
//时间
@property (nonatomic,strong) NSMutableArray * timeArr;
//周
@property (nonatomic,strong) NSMutableArray * weekArr;
@property (nonatomic,strong) NSMutableArray * statusArr;
@property (nonatomic,strong) ELTSelectTimeCollectionViewCell * item;
@property (nonatomic,strong) UIButton * selectedButton;
@property (weak, nonatomic) IBOutlet UIPickerView * pickerview;
@property (strong, nonatomic) IBOutlet UIView *selectBox;
@property (strong, nonatomic) IBOutlet UIImageView *selectBoxImg;
@property (strong, nonatomic) IBOutlet UILabel *selectBoxName;
@property (strong, nonatomic) IBOutlet UIView *selectTime;

//滚动条上的选中的button
@property (nonatomic,strong) NSMutableArray *buttonsArr;
@property (nonatomic, strong) UIButton *scrollViewFirBtn;
@property (nonatomic, strong) UIButton *scrollViewSecBtn;

@property (nonatomic, strong) UIScrollView * mainScrollView;

@end

@implementation ELTSelectServiceTimeViewController

-(NSMutableArray *)timeArr{
    if (!_timeArr) {
        _timeArr =[NSMutableArray array];
    }
    return _timeArr;
}
-(NSMutableArray *)statusArr{
    if (!_statusArr) {
        _statusArr =[NSMutableArray array];
    }
    return _statusArr;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    
//    if(_isLimited){
//        
//    }else{
//        self.navbar.homebtn.hidden = YES;
//    }
    if (_isLimited) {
        _task = @"eshopcalendar";
    }else{
        _task = @"serschedule";
        _num = nil;
        _serper_id = nil;
    }
    _weekTimeCount = 0;
    
    /**
     *  在代码中改变xib中的约束
     */
    
    // Do any additional setup after loading the view from its nib.
    _selectArr = [NSMutableArray array];
    _mItemInfoArray = [NSMutableArray array];
    _weekArr = [NSMutableArray array];
    _dataArr = [NSMutableArray array];
    self.title = @"选择服务时间";
    self.view.backgroundColor = UIColorFromRGB(0xf5f5f5);
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@"确定" style:UIBarButtonItemStyleDone target:self action:@selector(home:)];
    _DetermineTheChoiceBtn.layer.cornerRadius = 5;

//    self.navbar.homebtn.titleLabel.font= [UIFont systemFontOfSize:15];
    [self createUI];
//    [self createData];
//    [self createCustomScrollView];
    
    UITapGestureRecognizer * tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tap)];
    [self.sstView addGestureRecognizer:tap];
    
#pragma mark - 资源有限乎 yd
    if (self.isLimited == NO) {
        self.okBtnHeightConstraint.constant = 0;
        self.DetermineTheChoiceBtn.hidden = YES;

        _top_view.hidden = YES;
        _top_view_two.hidden = YES;
        self.tipview.constant = 0;
        self.sstview.constant = 0;
        [self.view setNeedsLayout];
        [self.view layoutIfNeeded];
        [self.view bringSubviewToFront:self.DetermineTheChoiceBtn];
        self.DetermineTheChoiceBtn.layer.masksToBounds = YES;
        self.DetermineTheChoiceBtn.layer.borderWidth = .1f;
        self.DetermineTheChoiceBtn.layer.cornerRadius = 5.f;
        [self downRequestWeekTime];
        self.serviceTime = nil;
    }else{
        self.okBtnHeightConstraint.constant = 0;
        self.DetermineTheChoiceBtn.hidden = YES;
        _bj_view.hidden = YES;
        self.serviceTime = self.choosetimeArr[0];
        [self createUIPickerView];
    }
  
    self.selectTime.hidden = YES;

}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];

}
#pragma mark - 周  解析
- (void)downRequestWeekTime{
    [self.indicator startAnimatingActivit];
    __weak typeof(self) weakSelf = self;
    [ELRequestSingle getWeekTimeWithRequestBlock:^(BOOL sucess, id objc) {
        if ([objc isKindOfClass:[NSString class]]) {
            [self showAlertViewWith:objc];
           [weakSelf.indicator LoadSuccess];
        }else{
            _weekArr = objc;
            [weakSelf createCustomScrollView];
            [weakSelf downRequestTime];
        }
        
    } andShoppe_id:self.shoppe_id];
    
}


#pragma mark - 时间解析
- (void)downRequestTime{
//    http://192.168.1.166/zxga/app/index.php?com=com_appService&method=save&app_com=com_appserveorder&task=eshopcalendar

    [self.indicator LoadFailed];
    _timeArr =[NSMutableArray array];
    ELTWeekTimeModel * time = _weekArr[_weekTimeCount];
    __weak typeof(self) weakSelf = self;
    [ELRequestSingle getEshopCalendarWithRequestBlock:^(BOOL sucess, id objc) {
        [weakSelf.indicator LoadSuccess];
        _timeArr = objc;
        [weakSelf.collectionView reloadData];
    } andShoppe_id:self.shoppe_id andDate:time.date andTask:_task andNum:self.serviceTime andSerper_id:_serper_id];
}

#pragma mark - pickerView 相关方法

-(void)createUIPickerView{
    
//    NSArray * arr =@[@"2小时",@"2.5小时",@"3小时",@"3.5小时",@"4小时"];
    //    NSArray * arr1 =@[@"2",@"2.5",@"3",@"3.5",@"4"];
    [self.dataArr addObjectsFromArray:_choosetimeArr];
    self.pickerview.delegate = self;
    self.pickerview.dataSource = self;
    
    [self.pickerview reloadAllComponents];
    
    self.view.backgroundColor = UIColorFromRGB(0xf5f5f5);
    
    
    UITapGestureRecognizer * tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tap)];
    [self.selectBox addGestureRecognizer:tap];
    
}
#pragma tap 选择条的手势
-(void)tap{
    [UIView animateWithDuration:1 animations:^{
        self.selectTime.hidden = NO;
    }];
}
#pragma pickerDelegate
-(NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{
    return 1;
}
-(NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component{
    return self.dataArr.count;
}
- (NSString *)pickerView:(UIPickerView *)pickerView
             titleForRow:(NSInteger)row
            forComponent:(NSInteger)component {
    //    if (component == 0)
    //        return [self.breadTypes objectAtIndex:row];//设置第一列的内容(数组的self不能少)
    //    return [self.fillingTypes objectAtIndex:row];//设置第二列的内容(数组的self不能少)
    
    return [NSString stringWithFormat:@"%@小时",[self.dataArr objectAtIndex:row]];
}

-(CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component{
    return 42.5f;
}
-(void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component{
    NSString * str = self.dataArr[row];
    self.serviceTime =str;
}
#pragma mark - 确定点击事件
- (IBAction)selected:(id)sender {
    //    timer.png
    //DA2C41
    [UIView animateWithDuration:1 animations:^{
        self.selectBoxName.text = [NSString stringWithFormat:@"服务时长：%@小时",self.serviceTime];
        self.selectBoxName.textColor = UIColorFromRGB(0xDA2C41);
        self.selectBoxImg.image = [UIImage imageNamed:@"elt_timer"];
        self.selectTime.hidden = YES;
        self.bj_view.hidden = NO;
    }];
    
    
    self.indicator = [[ActivityIndicator alloc]initWithFrame:CGRectMake(0, 0, _bj_view.frame.size.width, _bj_view.frame.size.height) LabelText:@"正在加载..." withdelegate:self withType:ActivityIndicatorDefault andAction:nil];
    
    //    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self.indicator startAnimatingActivit];
    [_bj_view addSubview:self.indicator];
    
    
    
    [self downRequestWeekTime];
}
#pragma mark - 取消点击事件
- (IBAction)arrow:(id)sender {
    [UIView animateWithDuration:1 animations:^{
        self.selectTime.hidden = YES;
    }];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(void)back:(id)sender{
    [self.navigationController popViewControllerAnimated:YES];
}
#pragma mark 自定义滚动视图
-(void)createCustomScrollView
{
    UIScrollView *scrollView = [[UIScrollView alloc] init];
    scrollView.frame = CGRectMake(0, 0, SCREENWIDTH, self.scrollViewBotomView.frame.size.height);
#define scrollViewSepWidth self.scrollViewBotomView.frame.size.width/4.5f
    CGFloat imageW = SCREENWIDTH/4.5f;
    
    NSLog(@"imageWimageWimageWimageW%f",imageW);
    scrollView.backgroundColor = [UIColor whiteColor];
    scrollView.contentSize = CGSizeMake(imageW *7+30*2, 0);//内容视图
    scrollView.contentOffset = CGPointMake(0, 0);//初始位置偏移量
    scrollView.delegate = self;
    scrollView.bounces = YES;
    scrollView.showsHorizontalScrollIndicator =NO;
    scrollView.tag = 1000;
    self.mainScrollView = scrollView;
    [self.scrollViewBotomView addSubview:scrollView];
    for (int index = 0; index<7; index++) {
        UIView * view = [[UIView alloc]init];
        ELTWeekTimeModel * weekTime = [_weekArr objectAtIndex:index];
        view.tag = index + VIEW_TAG;//view的标记
        view.backgroundColor =UIColorFromRGB(0xf5f5f5);
        // 设置frame
        CGFloat imageX = index * imageW;
        view.frame = CGRectMake(30+imageX, 0, imageW, self.scrollViewBotomView.frame.size.height);
        UIButton * lableTop =[[UIButton alloc]initWithFrame:CGRectMake(0, 0, view.frame.size.width, view.frame.size.height/2)];
        [lableTop setTitle:[NSString stringWithFormat:@"%d",index+1] forState:UIControlStateNormal];
             [lableTop setTitle:weekTime.name forState:UIControlStateNormal];
            lableTop.titleLabel.textAlignment = NSTextAlignmentLeft;
            lableTop.contentVerticalAlignment = UIControlContentVerticalAlignmentBottom;
        [lableTop setTitleColor:UIColorFromRGB(0x666666) forState:UIControlStateNormal];
        [lableTop setTitleColor:UIColorFromRGB(0xda2c41) forState:UIControlStateSelected];
            lableTop.titleLabel.font =[UIFont systemFontOfSize:12];

        lableTop.userInteractionEnabled =NO;
        [view addSubview: lableTop];
        
        UIButton* lableTop2 =[[UIButton alloc]initWithFrame:CGRectMake(0,view.frame.size.height/2.f, view.frame.size.width, view.frame.size.height/2.f)];
        [ lableTop2 setTitle:weekTime.label forState:UIControlStateNormal];
        [ lableTop2 setTitleColor:UIColorFromRGB(0x666666) forState:UIControlStateNormal];
        [ lableTop2 setTitleColor:UIColorFromRGB(0xda2c41) forState:UIControlStateSelected];
        lableTop2.contentVerticalAlignment = UIControlContentVerticalAlignmentTop;
        lableTop2.titleLabel.font =UIFont(14);
        lableTop2.userInteractionEnabled =NO;
        [view addSubview: lableTop2];
        
        if (index ==0) {
            lableTop.selected =YES;
            self.scrollViewFirBtn = lableTop;
            
            lableTop2.selected =YES;
            self.scrollViewSecBtn = lableTop2;
        }
        
        UITapGestureRecognizer * tap =[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tap1:)];
        [view addGestureRecognizer:tap];
        [scrollView addSubview:view];
        [self.buttonsArr addObject:view];
        
        //保存button资源信息，同时增加button.oringin.x的位置，方便点击button时，移动位置。
        NSMutableDictionary *vNewDic = [NSMutableDictionary dictionaryWithObjectsAndKeys:[NSNumber numberWithFloat:imageW * index + 1],TOTALWIDTH, nil];
        [_mItemInfoArray addObject:vNewDic];
        mTotalWidth = imageW * index + 1;
    }
    
}

#pragma mark 移动button到可视的区域
/**
 *  自动滚动
 *
 *  @param aIndex 当前下标
 *  @param num    0 向左滑动 1 向右滑动
 */
-(void)moveScrolViewWithIndex:(NSInteger)aIndex Left_or_Right:(NSInteger)num{
    UIScrollView * scroView = (UIScrollView *)[self.view viewWithTag:1000];
    if (_mItemInfoArray.count < aIndex) {
        return;
    }
    //宽度小于320肯定不需要移动
    NSLog(@"+++%ld",mTotalWidth);
    if (mTotalWidth <= SCREENWIDTH - 60) {
        return;
    }
    NSDictionary *vDic = [_mItemInfoArray objectAtIndex:aIndex];
    float vButtonOrigin = [[vDic objectForKey:TOTALWIDTH] floatValue];
    NSLog(@"%f",vButtonOrigin);
    if (vButtonOrigin >= 100) {
        if ((vButtonOrigin + 120) >= mTotalWidth) {
            [scroView setContentOffset:CGPointMake(scroView.contentSize.width - SCREENWIDTH, scroView.contentOffset.y) animated:YES];
            return;
        }
        float vMoveToContentOffset;
        if (num == 1) {
            vMoveToContentOffset = vButtonOrigin - 120;
        }else{
            vMoveToContentOffset = vButtonOrigin - 70;
        }
        
        if (vMoveToContentOffset > 0) {
            [scroView setContentOffset:CGPointMake(vMoveToContentOffset, scroView.contentOffset.y) animated:YES];
        }
        //        NSLog(@"scrollwOffset.x:%f,ButtonOrigin.x:%f,mscrollwContentSize.width:%f",mScrollView.contentOffset.x,vButtonOrigin,mScrollView.contentSize.width);
    }else{
        [scroView setContentOffset:CGPointMake(0, scroView.contentOffset.y) animated:YES];
        return;
    }
}

#pragma mark - 滚动视图的点击事件 yd
-(void)tap1:(UITapGestureRecognizer *)tap{
    UIView * view = tap.view;
    [view isFirstResponder];
    UIButton *btn =view.subviews[0];
    
    self.scrollViewFirBtn.selected=NO;
    btn.selected =YES;
    self.scrollViewFirBtn =btn;
    
    UIButton *btn2 =view.subviews[1];
    
    self.scrollViewSecBtn.selected=NO;
    btn2.selected =YES;
    self.scrollViewSecBtn =btn2;
    NSLog(@"%ld",tap.view.tag);//根据tag刷新数据
    //保存当前点击的下标
    
    if (_weekTimeCount < tap.view.tag - VIEW_TAG) {
        _weekTimeCount = tap.view.tag - VIEW_TAG;
        [self moveScrolViewWithIndex:_weekTimeCount Left_or_Right:1];
        
    }else{
        _weekTimeCount = tap.view.tag - VIEW_TAG;
        [self moveScrolViewWithIndex:_weekTimeCount Left_or_Right:0];
    }
    //清除保存的数据
    [_selectArr removeAllObjects];
    
    self.indicator = [[ActivityIndicator alloc]initWithFrame:CGRectMake(0, 0, _collectionView.frame.size.width, _collectionView.frame.size.height) LabelText:@"正在加载..." withdelegate:self withType:ActivityIndicatorDefault andAction:nil];
    [self.indicator startAnimatingActivit];
    _collectionView.contentOffset = CGPointMake(0, 0);
    [_collectionView addSubview:self.indicator];
    [self downRequestTime];
}


#pragma mark - 回调
-(void)home:(id)sender{
    if(_isLimited){
        ELTWeekTimeModel * time = _weekArr[_weekTimeCount];
        if (_timeArr.count > 0 && _selectArr.count > 0) {
            
            ELTEShopDateModel * model = [_timeArr objectAtIndex:[_selectArr[0] integerValue]];
            
            NSString * timeStr = [NSString stringWithFormat:@"%@ — %@",model.sDate,model.eDate];
            self.block(time.date,time.name,timeStr,model);
            [self.navigationController popViewControllerAnimated:YES];
        }else{
            
            [self showAlertViewWith:@"选择服务时间"];
        }
    }else{
        ELTWeekTimeModel * time = _weekArr[_weekTimeCount];
        ELTEShopDateModel * model = [_timeArr objectAtIndex:[_selectArr[0] integerValue]];
        NSString * timeStr = model.sDate;
        self.block(time.date,time.name,timeStr,model);
        [self.navigationController popViewControllerAnimated:YES];
    }
}

#pragma sstfDelegate 回调时间段
-(void)sstTime:(NSString *)time{
    self.serviceTime = time;
}
#pragma falseData
-(void)createData{
    
    
    NSMutableArray * statusArr1 = [NSMutableArray array];
    NSMutableArray * timeArr1 = [NSMutableArray array];
    for (int i =0; i<20; i++) {
        NSString * fir = [NSString stringWithFormat:@"%d:00",i+8];
        if (i+8 <10) {
            fir = [NSString stringWithFormat:@"0%@",fir];
        }

        [timeArr1 addObject:fir];
        [statusArr1 addObject:[NSString stringWithFormat:@"%d",arc4random()%2]];
        NSString *sec = [NSString stringWithFormat:@"%d:30",i+8];
        if (i+8 <10) {
            sec = [NSString stringWithFormat:@"0%@",sec];
        }
        [timeArr1 addObject:sec];
        [statusArr1 addObject:[NSString stringWithFormat:@"%d",arc4random()%2]];
    }
    [self.timeArr addObjectsFromArray:timeArr1];
    [self.statusArr addObjectsFromArray:statusArr1];
    [_selectArr removeAllObjects];
    [self.collectionView reloadData];
}


#pragma mark - createCollectionView
-(void)createUI{
    NSInteger width = (SCREENWIDTH-48) /4 ;
    UICollectionViewFlowLayout * layout = [[UICollectionViewFlowLayout alloc]init];
    layout.minimumInteritemSpacing = 6.0f;// 行间距
    layout.minimumLineSpacing = 6.0f;//列间距
    layout.itemSize = CGSizeMake( width , width*((CGFloat)42.5f/(CGFloat)68.f));//控制item的宽高比
    layout.sectionInset = UIEdgeInsetsMake(15, 15, 15, 15);
    
#define ydcolor(r,g,b) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:1]
    
    
    // xib创建collectionView
    [self.collectionView setCollectionViewLayout:layout];
    self.collectionView.backgroundColor =[UIColor whiteColor];
    self.collectionView.alwaysBounceVertical = YES;
    [self.collectionView registerNib:[UINib nibWithNibName:@"ELTSelectTimeCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"ssts"];
}

#pragma mark - collectionViewDelegate
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.timeArr.count;
}
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTSelectTimeCollectionViewCell * item = [collectionView dequeueReusableCellWithReuseIdentifier:@"ssts" forIndexPath:indexPath];
    
    ELTEShopDateModel * model = [_timeArr objectAtIndex:indexPath.item];
    item.timeButton.titleLabel.adjustsFontSizeToFitWidth = YES;
    if (_isLimited) {
        [item.timeButton setTitle:[NSString stringWithFormat:@"%@-%@",model.sDate,model.eDate] forState:UIControlStateNormal];
        switch ([model.hold integerValue]) {
            case 0:
            {
                [item.timeButton setBackgroundImage:[UIImage imageNamed:@"elt_timer_bg"] forState:UIControlStateNormal];
                if (_selectArr.count == 0) {
                    item.timeButton.selected = YES;
                    //清除保存的数据
                    [_selectArr removeAllObjects];
                    [_selectArr addObject:[NSString stringWithFormat:@"%ld",indexPath.row]];
                }
                // set和get要注意一下
                item.timeButton.enabled = YES;
            }
                break;
            case 1:
            {
                [item.timeButton setBackgroundImage:[UIImage imageNamed:@"elt_timer_bgfull"] forState:UIControlStateNormal];
                item.timeButton.enabled = NO;
            }
                break;
                
            default:
                break;
        }

    }else{
        [item.timeButton setTitle:model.sDate forState:UIControlStateNormal];
        if (_selectArr.count == 0) {
            item.timeButton.selected = YES;
            //清除保存的数据
            [_selectArr removeAllObjects];
            [_selectArr addObject:[NSString stringWithFormat:@"%ld",indexPath.row]];
        }
    }
    item.delegate = self;
    [item.timeButton setBackgroundImage:[UIImage imageNamed:@"elt_elt_sels"] forState:UIControlStateSelected];
    [item.timeButton setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
    item.timeButton.tag = indexPath.row;
    item.tag = indexPath.row + CELL_TAG;
    
    item.timeButton.selected = NO;
    if (_selectArr.count > 0 && [_selectArr[0] integerValue] == indexPath.row) {
        item.timeButton.selected = YES;
    }
    if(_isLimited){
        item.timeButton.titleLabel.font = UIFont(10);
    }
    return item;
}
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTSelectTimeCollectionViewCell * item = [collectionView dequeueReusableCellWithReuseIdentifier:@"ssts" forIndexPath:indexPath];
  
    item.timeButton.selected = YES;
    [item.timeButton setBackgroundImage:[UIImage imageNamed:@"elt_elt_addbtn"] forState:UIControlStateHighlighted];
}
#pragma mark 选择时间 yd
-(void)btnClicked:(UIButton *)btn{
    
    if (!btn.selected) {
        btn.selected = YES;
        
        
        
//        for (int i = 0; i < _selectArr.count; i++) {
        ELTSelectTimeCollectionViewCell * cell = (ELTSelectTimeCollectionViewCell *)[_collectionView viewWithTag:[_selectArr[0] integerValue]+ CELL_TAG];
        cell.timeButton.selected = NO;
//        }

        [_selectArr removeAllObjects];
        [_selectArr addObject:[NSString stringWithFormat:@"%ld",(long)btn.tag]];
   }
//    else
//    {
//        btn.selected = NO;
//        NSMutableArray * arr = [_selectDic objectForKey:_selectDicKey];
//        [arr removeObject:[NSString stringWithFormat:@"%ld",btn.tag]];
//        [_selectDic setValue:arr forKey:_selectDicKey];
//    }
}
//-(void)selectionList:(HTHorizontalSelectionList *)selectionList didSelectButtonWithIndex:(NSInteger)index{
//    [self.collectionView reloadData];
//}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
#pragma mark - 确认选择
- (IBAction)determineTheChoice:(id)sender {
    ELTWeekTimeModel* time = _weekArr[_weekTimeCount];
    ELTEShopDateModel * model = [_timeArr objectAtIndex:[_selectArr[0] integerValue]];
    NSString * timeStr = model.sDate;
    self.block(time.date,time.name,timeStr,model);
    [self.navigationController popViewControllerAnimated:YES];
}
- (IBAction)leftBtn:(id)sender {
    UIScrollView * scroView = (UIScrollView *)[self.view viewWithTag:1000];
    CGFloat x = scroView.contentOffset.x;
    [UIView animateWithDuration:1 animations:^{
        scroView.contentOffset = CGPointMake(x-scrollViewSepWidth, 0);
        
        
        if (scroView.contentOffset.x < 0) {
            scroView.contentOffset = CGPointMake(0, 0);
        }
    }];
    
    
    
    [self left_or_rightBtn:@"left" andTag:_weekTimeCount];
    
    

    
}

- (IBAction)rightBtn:(id)sender {
    UIScrollView * scroView = (UIScrollView *)[self.view viewWithTag:1000];
    CGFloat x = scroView.contentOffset.x;
    [UIView animateWithDuration:1 animations:^{
        scroView.contentOffset = CGPointMake(x+scrollViewSepWidth, 0);
        if (scroView.contentOffset.x > (scroView.contentSize.width - scrollViewSepWidth * 4)) {
            scroView.contentOffset = CGPointMake(scroView.contentSize.width - scrollViewSepWidth * 4.5, 0);
        }
    }];
    [self left_or_rightBtn:@"right" andTag:_weekTimeCount];
}
- (void)left_or_rightBtn:(NSString *)left_or_right andTag:(NSInteger)tag{
    UIScrollView * scroView = (UIScrollView *)[self.view viewWithTag:1000];
    UIView * view;
    if ([left_or_right isEqualToString:@"left"] && tag != 0) {
        view = [scroView viewWithTag:tag - 1 + VIEW_TAG];
        [view isFirstResponder];
        UIButton *btn =view.subviews[0];
        
        self.scrollViewFirBtn.selected=NO;
        btn.selected =YES;
        self.scrollViewFirBtn =btn;
        
        UIButton *btn2 =view.subviews[1];
        
        self.scrollViewSecBtn.selected=NO;
        btn2.selected =YES;
        self.scrollViewSecBtn =btn2;
        
        [self moveScrolViewWithIndex:view.tag Left_or_Right:0];
        
        //清除保存的数据
        [_selectArr removeAllObjects];
        //保存当前点击的下标
        _weekTimeCount = tag - 1;
        self.indicator = [[ActivityIndicator alloc]initWithFrame:CGRectMake(0, 0, _collectionView.frame.size.width, _collectionView.frame.size.height) LabelText:@"正在加载..." withdelegate:self withType:ActivityIndicatorDefault andAction:nil];
        //    [self.indicator setIndicatorType:ActivityIndicatorLogin];
        [self.indicator startAnimatingActivit];
        _collectionView.contentOffset = CGPointMake(0, 0);
        [_collectionView addSubview:self.indicator];
        [self downRequestTime];
    }
    if ([left_or_right isEqualToString:@"right"] && tag != 6) {
        view = [scroView viewWithTag:tag + 1 + VIEW_TAG];
        [view isFirstResponder];
        UIButton *btn =view.subviews[0];
        
        self.scrollViewFirBtn.selected=NO;
        btn.selected =YES;
        self.scrollViewFirBtn =btn;
        
        UIButton *btn2 =view.subviews[1];
        
        self.scrollViewSecBtn.selected=NO;
        btn2.selected =YES;
        self.scrollViewSecBtn =btn2;
        
        [self moveScrolViewWithIndex:view.tag Left_or_Right:1];
        //清除保存的数据
        [_selectArr removeAllObjects];
        //保存当前点击的下标
        _weekTimeCount = tag + 1;
        self.indicator = [[ActivityIndicator alloc]initWithFrame:CGRectMake(0, 0, _collectionView.frame.size.width, _collectionView.frame.size.height) LabelText:@"正在加载..." withdelegate:self withType:ActivityIndicatorDefault andAction:nil];
        //    [self.indicator setIndicatorType:ActivityIndicatorLogin];
        [self.indicator startAnimatingActivit];
        _collectionView.contentOffset = CGPointMake(0, 0);
        [_collectionView addSubview:self.indicator];
        [self downRequestTime];
    }
   

    NSLog(@"%ld",_weekTimeCount);
}
/*!
 * @method 调整顶部滚动视图x位置
 * @abstract
 * @discussion
 * @param
 * @result
 */
- (void)adjustScrollViewContentX:(UIButton *)sender
{
    
}






@end
