//
//  ComodityJudgeViewController.m
//  GuoanBuyer
//
//  Created by elongtian on 15/8/31.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTComodityJudgeViewController.h"
#import "ELTCommodityJudgeViewCell.h"
#import "ZLPhoto.h"
#import "LxGridView.h"
#import "ELTCommidyOrderDetailModel.h"
#import "ELTJudgeImageCollectionViewCell.h"
#import "CWStarRateView.h"

@interface ELTComodityJudgeViewController ()<UITableViewDataSource,UITableViewDelegate,UIActionSheetDelegate,UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout,ZLPhotoPickerBrowserViewControllerDelegate,ZLPhotoPickerBrowserViewControllerDataSource>{
    NSInteger _selectSection;
}
@property (nonatomic , strong) NSMutableArray *assets;//图片数据源
@property (nonatomic, strong) LxGridView * gridView;//选择照片页面

@property (strong,nonatomic) ZLCameraViewController *cameraVc;

@property (nonatomic,strong) CWStarRateView *starView;//顶部服务评价

@end

@implementation ELTComodityJudgeViewController

-(void)viewWillAppear:(BOOL)animated{
    
    //服务态度不可点击的蒙层
    UIView *view = [[UIView alloc]initWithFrame:self.starRateBottom.bounds];
    view.backgroundColor = [UIColor clearColor];
    if (_isHidden) {
        self.starView.scorePercent = _evaluation_value / 5.0;
        [self.starRateBottom addSubview:view];
    }
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.title = @"评价订单";
    
    [self.mainTable registerNib:[UINib nibWithNibName:@"TABViewCell" bundle:nil] forCellReuseIdentifier:@"TABViewCell"];
    
    self.starView = [[CWStarRateView alloc] initWithFrame:CGRectMake(_label.right,_label.top - 2,150,_label.height + 2) numberOfStars:5];
    self.starView.hasAnimation = YES;
    [self.starRateBottom addSubview:self.starView];
    
    
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@"提交" style:UIBarButtonItemStyleDone target:self action:@selector(rightClick)];
    
}

#pragma mark - 提交评价
-(void)rightClick{
    [self load];
}

#pragma mark - tableview 代理
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return _dataArray.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:indexPath.section];
    if (model.review_img.count) {
        return 275 + (SCREENWIDTH - 60) / 3;
    }else{
        return 260;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTCommodityJudgeViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"TABViewCell"];
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:indexPath.section];
    cell.model = model;
    [cell.picimage setImageWithURL:[NSURL URLWithString:model.content_img]];
    cell.Namelabel.text = model.commodity_name;
    cell.more.text = model.unit_price;
    
    cell.photoBtn.tag = indexPath.section;
    [cell.photoBtn addTarget:self action:@selector(photoClick:) forControlEvents:UIControlEventTouchUpInside];
    [cell.collectionView registerNib:[UINib nibWithNibName:@"Example2CollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"Example2CollectionViewCell"];
    if (model.review_img) {
        cell.collectionView.height = (SCREENWIDTH - 60) / 3 + 15;
    }else{
        cell.collectionView.height = 0;
    }
    cell.collectionView.delegate = self;
    cell.collectionView.dataSource = self;
    cell.collectionView.scrollEnabled = NO;
    return cell;
}


#pragma mark - 点击出现actionsheet
-(void)photoClick:(UIButton *)button{
    
    _selectSection = button.tag;
    UIActionSheet *myActionSheet = [[UIActionSheet alloc]initWithTitle:nil
                                                              delegate:self
                                                     cancelButtonTitle:@"取消"
                                                destructiveButtonTitle:nil
                                                     otherButtonTitles:@"打开照相机",@"从手机相册获取",nil];
    
    [myActionSheet showInView:[UIApplication sharedApplication].keyWindow];
    
}

#pragma mark - actionsheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    switch (buttonIndex)
    {
        case 0:  //打开照相机拍照
            [self openCamera];
            break;
        case 1:  //打开本地相册
            [self openLocalPhoto];
            break;
    }
}

#pragma mark - 照相机照相
- (void)openCamera{
    ZLCameraViewController *cameraVc = [[ZLCameraViewController alloc] init];
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    // 拍照最多个数
    if (model.review_img.count >= 3) {
        cameraVc.maxCount = 0;
    }else{
        cameraVc.maxCount = 3 - model.review_img.count;
    }
    [cameraVc showPickerVc:self];
    __weak typeof(self) weakSelf = self;
    cameraVc.callback = ^(NSArray *cameras){
        
        model.array = cameras;
        
        [weakSelf uploadImage];
        
    };
    
}

#pragma mark - 相册
- (void)openLocalPhoto{
    
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    ZLPhotoPickerViewController *pickerVc = [[ZLPhotoPickerViewController alloc] init];
    // 最多能选3张图片
    if (model.review_img.count >= 3) {
        pickerVc.maxCount = 0;
    }else{
        pickerVc.maxCount = 3 - model.review_img.count;
    }
    pickerVc.status = PickerViewShowStatusCameraRoll;
    [pickerVc showPickerVc:self];
    
    __weak typeof(self) weakSelf = self;
    pickerVc.callBack = ^(NSArray *assets){
        
        model.array = assets;
        
        [weakSelf uploadImage];
        
    };
}

- (void)back:(id)sender{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - collectionviewDelegate

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    return model.review_img.count;
    
}

-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath{
    
    return CGSizeMake((SCREENWIDTH - 60)/3, (SCREENWIDTH - 60)/3);
    
}

//每个UICollectionView展示的内容
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
        
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    ELTJudgeImageCollectionViewCell * cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"Example2CollectionViewCell" forIndexPath:indexPath];
    cell.backgroundColor = [UIColor whiteColor];
    
    ZLPhotoAssets *photo = [model.review_img objectAtIndex:indexPath.item];
    [cell.imageView sd_setImageWithURL:[NSURL URLWithString:(NSString *)photo]];
    return cell;
        
}
#pragma mark --UICollectionViewDelegateFlowLayout

//定义每个UICollectionView 的 margin
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0, 15, 15, 15);
}

#pragma mark - <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    
    // 图片游览器
    ZLPhotoPickerBrowserViewController *pickerBrowser = [[ZLPhotoPickerBrowserViewController alloc] init];
    
    // 数据源/delegate
    // 动画方式
    /*
     *
     UIViewAnimationAnimationStatusZoom = 0, // 放大缩小
     UIViewAnimationAnimationStatusFade , // 淡入淡出
     UIViewAnimationAnimationStatusRotate // 旋转
     pickerBrowser.status = UIViewAnimationAnimationStatusFade;
     */
    pickerBrowser.delegate = self;
    pickerBrowser.dataSource = self;
    // 是否可以删除照片
    pickerBrowser.editing = YES;
    // 当前分页的值
    // pickerBrowser.currentPage = indexPath.row;
    // 传入组
    pickerBrowser.currentIndexPath = indexPath;
    // 展示控制器
    [pickerBrowser showPickerVc:self];
}

#pragma mark - <ZLPhotoPickerBrowserViewControllerDataSource>
- (NSInteger)numberOfSectionInPhotosInPickerBrowser:(ZLPhotoPickerBrowserViewController *)pickerBrowser{
    return 1;
}

- (NSInteger)photoBrowser:(ZLPhotoPickerBrowserViewController *)photoBrowser numberOfItemsInSection:(NSUInteger)section{
    
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    return model.review_img.count;
    
}

#pragma mark - 每个组展示什么图片,需要包装下ZLPhotoPickerBrowserPhoto
- (ZLPhotoPickerBrowserPhoto *)photoBrowser:(ZLPhotoPickerBrowserViewController *)pickerBrowser photoAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    
    id imageObj = [model.review_img objectAtIndex:indexPath.item];
    
    ZLPhotoPickerBrowserPhoto *photo = [ZLPhotoPickerBrowserPhoto photoAnyImageObjWith:imageObj];
    // 包装下imageObj 成 ZLPhotoPickerBrowserPhoto 传给数据源
    ELTCommodityJudgeViewCell *cell = (ELTCommodityJudgeViewCell *)[self.mainTable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:_selectSection]];
    ELTJudgeImageCollectionViewCell *collectionCell = (ELTJudgeImageCollectionViewCell *)[cell.collectionView cellForItemAtIndexPath:indexPath];
    // 缩略图
    if ([imageObj isKindOfClass:[ZLPhotoAssets class]]) {
        photo.asset = imageObj;
    }else if ([imageObj isKindOfClass:[NSString class]]){
        photo.photoURL = [NSURL URLWithString:imageObj];
    }
    photo.toView = collectionCell.imageView;
    photo.thumbImage = collectionCell.imageView.image;
    return photo;
    
}

- (void)photoBrowser:(ZLPhotoPickerBrowserViewController *)photoBrowser removePhotoAtIndexPath:(NSIndexPath *)indexPath{
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    
    if (indexPath.row> [model.review_img count]) return;
    
    [model.review_img removeObjectAtIndex:indexPath.row];
    [_mainTable reloadData];
    ELTCommodityJudgeViewCell *cell = (ELTCommodityJudgeViewCell *)[self.mainTable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:_selectSection]];
    [cell.collectionView reloadData];
}

#pragma mark - ActionSheet Delegate#pragma mark - 选择照片
- (void)selectPhotos {
    UIActionSheet *myActionSheet = [[UIActionSheet alloc]initWithTitle:nil
                                                              delegate:self
                                                     cancelButtonTitle:@"取消"
                                                destructiveButtonTitle:nil
                                                     otherButtonTitles:@"打开照相机",@"从手机相册获取",nil];
    
    [myActionSheet showInView:[UIApplication sharedApplication].keyWindow];
}

-(void)uploadImage{
    
    self.indicator.frame = CGRectMake(0, NAVHEIGHT, SCREENWIDTH, SCREENHEIGHT - NAVHEIGHT);
    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self.indicator startAnimatingActivit];
    NSMutableArray * imgArr = [NSMutableArray array];
    NSMutableDictionary * imgDic = [NSMutableDictionary dictionary];
    ELTCommidyOrderDetailModel *model = [_dataArray objectAtIndex:_selectSection];
    for (int i = 0; i < model.array.count; i++) {
        UIImage * modify_image;
        // 判断类型来获取Image
        ZLPhotoAssets *asset = model.array[i];
        if ([asset isKindOfClass:[ZLPhotoAssets class]]) {
            modify_image = asset.thumbImage;
        }else if ([asset isKindOfClass:[NSString class]]){
            [imgArr addObject:asset];
        }else if([asset isKindOfClass:[UIImage class]]){
            modify_image = (UIImage *)asset;
        }else if ([asset isKindOfClass:[ZLCamera class]]){
            modify_image = [asset thumbImage];
        }
        if (![asset isKindOfClass:[NSString class]]) {
            [imgDic setObject:modify_image forKey:[NSString stringWithFormat:@"content_img_%d",i + 1]];
        }
    }
    [ELHttpRequestOperation getTokenAndTime];
    NSString * url = [NSString stringWithFormat:@"%@%@",HTTP,@"&method=save&app_com=com_appcenter&task=uploadimg"];

    ELHttpRequestOperation *sharedClient = nil;
    sharedClient = [ELHttpRequestOperation manager];
    [sharedClient setResponseSerializer:[AFHTTPResponseSerializer serializer]];
    [sharedClient setRequestSerializer:[AFHTTPRequestSerializer serializer]];
    [[sharedClient responseSerializer] setAcceptableContentTypes:[NSSet setWithObject:@"text/html"]];
    [sharedClient POST:url parameters:nil constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {
        NSArray * valueArr = [imgDic allValues];
        NSArray * keyArr = [imgDic allKeys];
        for(int i = 0 ;i<keyArr.count; i++){
            [formData appendPartWithFileData:UIImageJPEGRepresentation(valueArr[i], 1.0) name:keyArr[i] fileName:[NSString stringWithFormat:@"%@.jpg",keyArr[i]]  mimeType:@"image/jpg"];
        }
    } success:^(AFHTTPRequestOperation *operation, id responseObject) {
        
        JSONDecoder * json = [[JSONDecoder alloc]init];
        NSDictionary * dic1 = [json objectWithData:responseObject];
        if ([[dic1 objectForKey:@"status"] integerValue] == 1) {
            [self.indicator LoadSuccess];
            [model.review_img addObjectsFromArray:[dic1 objectForKey:@"datalist"]];
            
            NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:_selectSection];
            [self.mainTable reloadSections:indexSet withRowAnimation:UITableViewRowAnimationNone];
            
            ELTCommodityJudgeViewCell *cell = (ELTCommodityJudgeViewCell *)[self.mainTable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:_selectSection]];
            [cell.collectionView reloadData];
        }
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        
    }];
    
}

-(void)load{
    
    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self.indicator startAnimatingActivit];
    
    NSString * base64Str;
    if (_isHidden) {
        
    }else{
    
        NSDictionary *dic = @{@"order_id":_order_id,@"store_id":_store_id,@"evaluation_value":[NSString stringWithFormat:@"%.0f",self.starView.scorePercent * 5]};
        NSString *string = [dic JSONString];
        base64Str = [CommonFunc base64StringFromText:string];
    }
    NSMutableArray *array = [NSMutableArray array];
    NSDictionary *dict;
    for (ELTCommidyOrderDetailModel * model in _dataArray) {
        if (model.evaluation_value != 0) {
            
            if (model.review_img.count) {
                dict = @{@"order_id":_order_id,@"store_id":_store_id,@"eshop_id":_eshop_id,@"link_id":model.commodity_id,@"evaluation_content":model.evaluation_content,@"evaluation_value":[NSString stringWithFormat:@"%.ld",(long)model.evaluation_value],@"review_img":model.review_img};
            }else{
                dict = @{@"order_id":_order_id,@"store_id":_store_id,@"eshop_id":_eshop_id,@"link_id":model.commodity_id,@"evaluation_content":model.evaluation_content,@"evaluation_value":[NSString stringWithFormat:@"%.ld",(long)model.evaluation_value]};
            }
            [array addObject:dict];
        }
    }
    if (!array.count) {
        [self showAlertViewWith:@"亲，评价订单必须选好中差评哦！"];
        [self.indicator LoadSuccess];
        return;
    }
    NSString *arrayString = [array JSONString];
    NSString * comment = [CommonFunc base64StringFromText:arrayString];
    
   [ELRequestSingle judgeOrderRequest:^(BOOL sucess, id objc) {
       if ([[objc objectForKey:@"status"]integerValue] == 0) {
           [self.indicator LoadSuccess];
           [self showAlertViewWith:[objc objectForKey:@"msg"]];
       }else{
           [self.indicator LoadSuccess];
           [self.navigationController popViewControllerAnimated:YES];
           
       }
   } andComment:comment andStaff:base64Str andOrder_id:_order_id];
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
