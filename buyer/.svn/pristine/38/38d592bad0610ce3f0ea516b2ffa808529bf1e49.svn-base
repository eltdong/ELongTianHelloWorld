//
//  MassageViewController.m
//  Guoan Test
//
//  Created by elongtian on 15/7/28.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTServiceListViewController.h"
#import "ELTServiceListCollectionViewCell.h"
#import "ELTServiceDetailViewController.h"
#import "ELTSelectServicePersonelViewController.h"
#import "ELTSearchCustomView.h"
#import "ELTServiceModel.h"
#import "ELTServiceDetailsModel.h"


@interface ELTServiceListViewController ()<UICollectionViewDelegateFlowLayout,UICollectionViewDataSource,UITextFieldDelegate>
{
  NSString * _sort;
  NSInteger _page;


}
@property (nonatomic, strong) UIView * searchView;
@property (nonatomic, strong) UITextField * searchTextField;
@property (nonatomic, copy) NSString * keyword;
#pragma mark - 数据源 yd
@property (nonatomic,strong) NSMutableArray * dataArr;
@property (nonatomic,strong) ELTSearchCustomView * scv;
@end

@implementation ELTServiceListViewController
- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
    _scv = [ELTSearchCustomView initWithCustomSearchView];
    _scv.searchType = SearchServiceInterface;
    [self.view addSubview:_scv];
    
    _scv.frame  = CGRectMake(0, 64, SCREENWIDTH, 40);
    __weak typeof(self) WeakSelf = self;
    _scv.block = ^(NSString * sort){
        _sort = sort;
        [WeakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [WeakSelf.dataArr removeAllObjects];
        WeakSelf.collectionView.contentOffset = CGPointMake(0, 0);
        [WeakSelf downRequest];
    };
    self.searchView.hidden = YES;
    [self.view bringSubviewToFront:self.indicator];
    
    
}
- (void)viewWillDisappear:(BOOL)animated{
    self.searchView.hidden = YES;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.

    self.title =self.classificationName;
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithImage:[[UIImage imageNamed:@"elt_search"]imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] style:UIBarButtonItemStyleDone target:self action:@selector(home:)];
    [self createUI];
    _dataArr = [NSMutableArray array];
    self.searchView = [[UIView alloc]initWithFrame:CGRectMake(45, 5, SCREENWIDTH - 55, 30)];
    self.searchView.backgroundColor = UIColorFromRGB(0xffffff);
    self.searchView.layer.cornerRadius = 5.0f;
    self.searchView.hidden = YES;
    [self.navigationController.navigationBar addSubview:self.searchView];
    
    UIImageView * imageView = [[UIImageView alloc]initWithFrame:CGRectMake(7, 5, 20, self.searchView.frame.size.height - 10)];
    imageView.image = [UIImage imageNamed:@"elt_search_bg3"];
    [self.searchView addSubview:imageView];
    UITextField * searchTextField = [[UITextField alloc]initWithFrame:CGRectMake(30,0, self.searchView.frame.size.width - 30, self.searchView.frame.size.height)];
    searchTextField.backgroundColor = UIColorFromRGB(0xffffff);
    searchTextField.layer.cornerRadius = 5.0f;
    searchTextField.font = UIFont(12);
    searchTextField.placeholder = @"请输入搜索内容";
    searchTextField.delegate = self;
    searchTextField.returnKeyType = UIReturnKeySearch;
    self.searchTextField = searchTextField;
    [self.searchView addSubview:self.searchTextField];
    
    _keyword =@"";
    _page = 1;
    _sort =@"4";
    
    [self drop_on];
    [self drop_down];
    [self downRequest];
}



/**
 * UITableView +   传统
 */
- (void)drop_on
{
    __weak typeof(self) weakSelf = self;
    // 添加传统的上拉刷新
    // 设置回调（一旦进入刷新状态就会调用这个refreshingBlock）
    
    [self.collectionView addLegendFooterWithRefreshingBlock:^{
        _page ++;
        [weakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [weakSelf downRequest];
    }];
}
/**
 * UITableView + 下拉刷新 传统
 */
- (void)drop_down
{
    __weak typeof(self) weakSelf = self;
    // 添加传统的下拉刷新
    // 设置回调（一旦进入刷新状态就会调用这个refreshingBlock）
    [self.collectionView    addLegendHeaderWithRefreshingBlock:^{
        _page = 1;
        [weakSelf.dataArr removeAllObjects];
        [weakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [weakSelf downRequest];
        // 马上进入刷新状态
    }];
}

- (void)goTopClicked{
    self.collectionView.contentOffset = CGPointMake(0, 0);
}

-(void)back:(id)sender{
    [self.navigationController popToRootViewControllerAnimated:YES];
}
#pragma mark --获取数据源
- (void)downRequest{
     [self.indicator startAnimatingActivit];
    [ELRequestSingle screenRequestWithBlock:^(BOOL sucess, id objc) {
        [self.indicator LoadSuccess];
        
        if ([objc isKindOfClass:[NSString class]]) {
            [self showAlertViewWith:objc];
            [self.collectionView.footer noticeNoMoreData];
             [self.collectionView.header endRefreshing];
            _keyword = @"";
        }else{
            [_dataArr addObjectsFromArray:objc];
            if (_dataArr.count == 0) {
                [self.collectionView.footer noticeNoMoreData];
            }else{
                [self.collectionView.header endRefreshing];
                [self.collectionView.footer endRefreshing];
            }
            
            if(_dataArr.count < 10){
                [self.collectionView removeFooter];
            }
            
            [self.collectionView  reloadData];
        
        }
     
    } andAuto_code:self.ID andSort:_sort andRow:10 andPage:_page andKeyWord:[_keyword stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
}
#pragma mark - 搜索
-(void)home:(id)sender{
     self.searchView.hidden = NO;
    [self.searchTextField becomeFirstResponder];
   
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(void)createUI{
    NSInteger width = (SCREENWIDTH-18) /2 ;
    
    UICollectionViewFlowLayout * layout = [[UICollectionViewFlowLayout alloc]init];
    layout.minimumInteritemSpacing = 6.0f;// 行间距
    layout.minimumLineSpacing = 6.0f;//列间距
    layout.itemSize = CGSizeMake( width , width *(float)437.0f/(float)270);//控制cell的宽高比
    

    
    layout.sectionInset = UIEdgeInsetsMake(6, 6, 6, 6);

#define ydcolor(r,g,b) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:1]
    
    UICollectionView * collection = [[UICollectionView alloc]initWithFrame:CGRectMake(0, NAVHEIGHT+45,SCREENWIDTH ,SCREENHEIGHT-NAVHEIGHT-45) collectionViewLayout:layout];
    collection.backgroundColor = ydcolor(245, 245, 245);
    collection.dataSource = self;
    collection.delegate = self;
    collection.alwaysBounceVertical = YES;
    [self.view addSubview:collection];
    //注册cell
    [collection registerNib:[UINib nibWithNibName:@"ELTServiceListCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"massageItem"];

    self.collectionView = collection;
    self.collectionView.showsVerticalScrollIndicator = NO;
    
     [self.view bringSubviewToFront:self.gotop];
#pragma mark --- 返回gotop按钮
    UIButton *gotopButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, self.gotop.frame.size.width, self.gotop.frame.size.height)];
    [self.gotop addSubview:gotopButton];
    self.gotop.hidden = YES;
    [gotopButton addTarget:self action:@selector(goTopClicked) forControlEvents:UIControlEventTouchUpInside];
    self.gotop.layer.masksToBounds = YES;
#define radius (IOS7?20:22)
    self.gotop.layer.borderWidth = 0.1f;
    self.gotop.layer.cornerRadius = radius;
}
#pragma mark - collectionViewDelegat

-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
      return self.dataArr.count;
}
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
    ELTServiceListCollectionViewCell * item = [collectionView dequeueReusableCellWithReuseIdentifier:@"massageItem" forIndexPath:indexPath];
    item.backgroundColor =[ UIColor whiteColor];
    if (_dataArr.count) {
        ELTServiceModel *model =   _dataArr[indexPath.item];
        item.model = model;

    }
  
    if (self.collectionView.contentOffset.y > SCREENHEIGHT) {
        self.gotop.hidden = NO;
    }else{
        self.gotop.hidden = YES;
    }
    return item;
}
#pragma delegate 跳转
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self.indicator startAnimatingActivit];
    ELTServiceModel *model = _dataArr[indexPath.item];
    [ELRequestSingle screenRequestWithBlock:^(BOOL sucess, id objc) {
        [self.indicator LoadSuccess];
        
        ELTServiceDetailsModel *detailModel = objc;
        ELTServiceDetailViewController * md =[[ELTServiceDetailViewController alloc]init];
        md.model = detailModel;
        [self.navigationController pushViewController:md animated:YES];

    } andId:model.Id];
}

#pragma mark - textFieldDelegate
- (BOOL)textFieldShouldEndEditing:(UITextField *)textField{
    self.searchView.hidden = YES;

    return YES;
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    
    _keyword = textField.text;
    [self downRequest];
    [_searchTextField resignFirstResponder];
    _keyword = nil;
    textField.text = nil;
    return YES;
}
#pragma mark --要开始移动scrollView时调用（移除键盘）
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    [_searchTextField resignFirstResponder];
}

@end
