//
//  FVViewController.m
//  Guoan Test
//
//  Created by elongtian on 15/7/21.
//  Copyright (c) 2015年 elongtian. All rights reserved.
//

#import "ELTCommodityListViewController.h"
#import "ELTCommodityCollectionViewCell.h"
#import "ELTCommodityDetailViewController.h"
#import "mycartBar.h"
#import "ELTShoppingCarViewController.h"
#import "ELHttpRequestOperation.h"
#import "AFNetworking.h"
#import "ELTFruitAndVegatableModel.h"
#import "ELTAddressPopupboxView.h"
#import "ELTConfirmReceiptAddressView.h"
#import "ELTSearchCustomView.h"

#import "ELTServiceModel.h"
#import "ELTServiceListCollectionViewCell.h"
#import "ELTServiceDetailViewController.h"
#define spaceNum 6
#define cartBarHeight (float)130//购物车高度
@interface ELTCommodityListViewController ()<UICollectionViewDelegateFlowLayout,UICollectionViewDataSource,mycartDelegate>{
    NSString * _sort;//筛选
    NSInteger _page;//页数
    NSInteger _num;//第一次请求购物车个数
    CALayer *_layer;//加入购物车动画

}
@property(nonatomic,strong) mycartBar *mcb;//购物车view
@property (nonatomic,strong) ELTSearchCustomView * scv;//筛选view
@property (nonatomic,strong) NSMutableArray * dataArr;//商品列表数据源
@property (nonatomic, strong) UIView * searchView;//搜索view
@property (nonatomic, strong) UITextField * searchTextField;//搜索
@property (nonatomic, copy) NSString * keyword;//搜索－关键字
@property (nonatomic,strong) NSMutableArray *commodityArray;//存放商品详情
@property (nonatomic,strong) UIBezierPath *path;//加入购物车动画

@end

@implementation ELTCommodityListViewController

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    //筛选视图
    _scv = [ELTSearchCustomView initWithCustomSearchView];
    _scv.searchType = SearchCommodityInterface;
    [self.view addSubview:_scv];
    _scv.frame  = CGRectMake(0, 64, SCREENWIDTH, 40);
    __weak typeof(self) WeakSelf = self;
    _scv.block = ^(NSString * sort){
        _sort = sort;
        [WeakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [WeakSelf.dataArr removeAllObjects];
        WeakSelf.collection.contentOffset = CGPointMake(0, 0);
        [WeakSelf downRequest];
    };
    self.searchView.hidden = YES;
    [self.view bringSubviewToFront:self.indicator];
    [self downRequestShopCartNum];
}

- (void)viewWillDisappear:(BOOL)animated{
    self.searchView.hidden = YES;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.searchView = [[UIView alloc]initWithFrame:CGRectMake(50, 5, SCREENWIDTH - 55, 30)];
    self.searchView.backgroundColor = UIColorFromRGB(0xffffff);
    self.searchView.layer.cornerRadius = 5.0f;
    [self.navigationController.navigationBar addSubview:self.searchView];
    
    //搜索🔍
    UIImageView * imageView = [[UIImageView alloc]initWithFrame:CGRectMake(7, 5, 20, self.searchView.frame.size.height - 10)];
    imageView.image = [UIImage imageNamed:@"elt_search_bg3"];
    [self.searchView addSubview:imageView];
    UITextField * searchTextField = [[UITextField alloc]initWithFrame:CGRectMake(30,0, self.searchView.frame.size.width - 30, self.searchView.frame.size.height)];
    searchTextField.backgroundColor = UIColorFromRGB(0xffffff);
    searchTextField.layer.cornerRadius = 5.0f;
    searchTextField.font = UIFont(12);
    searchTextField.placeholder = @"请输入搜索内容";
    searchTextField.delegate = self;
    searchTextField.returnKeyType = UIReturnKeySearch;
    self.searchTextField = searchTextField;
    [self.searchView addSubview:self.searchTextField];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithImage:[[UIImage imageNamed:@"elt_search"]imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]  style:UIBarButtonItemStyleDone target:self action:@selector(home:)];
    self.dataArr = [NSMutableArray array];
    _keyword = @"";_page = 1;
    _sort = @"4";
    self.title = _name;
    self.barView.alpha = 1;
    [self createUI];
    [self.view bringSubviewToFront:self.goTop];
    [self.view bringSubviewToFront:self.barView];
    [self.view addSubview:self.indicator];
    [self downRequestShopCartNum];
    //加载底部view
    self.mcb = [mycartBar instanceView];
    self.mcb.frame = self.barView.bounds;
    self.mcb .vc= self;
    self.mcb .vcPush = [[ELTShoppingCarViewController alloc]init];
    self.mcb .delegate = self;
    self.mcb.isHiddenOfRDA = NO;
    [self.barView addSubview:self.mcb ];
    self.goTop.layer.masksToBounds = YES;
    self.goTop.hidden = YES;
    self.goTop.layer.borderWidth = 1.2f;
    self.goTop.layer.cornerRadius = 22;
    
    
    [self drop_on];
    [self drop_down];
    [self downRequest];
}

/**
 * UITableView +   传统
 */
- (void)drop_on
{
    __weak typeof(self) weakSelf = self;
    // 添加传统的上拉刷新
    // 设置回调（一旦进入刷新状态就会调用这个refreshingBlock）
    
    [self.collection addLegendFooterWithRefreshingBlock:^{
        _page ++;
        [weakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [weakSelf downRequest];
    }];
}
/**
 * UITableView + 下拉刷新 传统
 */
- (void)drop_down
{
    __weak typeof(self) weakSelf = self;
    // 添加传统的下拉刷新
    // 设置回调（一旦进入刷新状态就会调用这个refreshingBlock）
    [self.collection addLegendHeaderWithRefreshingBlock:^{
        _page = 1;
        [weakSelf.dataArr removeAllObjects];
        [weakSelf.indicator setIndicatorType:ActivityIndicatorLogin];
        [weakSelf downRequest];
        // 马上进入刷新状态
    }];
}

#pragma mark －－购物车跳转
-(void)btnClicked{
    ELTShoppingCarViewController *view =[[ELTShoppingCarViewController alloc]init];

    [self.navigationController pushViewController:view animated:YES];
}
#pragma mark - navgationbar上的点击事件
-(void)back:(id)sender{
    
    [self.navigationController popToRootViewControllerAnimated:YES];
}
-(void)home:(id)sender{
    self.searchView.hidden = NO;
    [self.searchTextField becomeFirstResponder];
}
-(void)createUI{
    NSInteger width = (SCREENWIDTH-18) /2 ;
    UICollectionViewFlowLayout * layout = [[UICollectionViewFlowLayout alloc]init];
    layout.minimumInteritemSpacing = 6.0f;// 行间距
    layout.minimumLineSpacing = 6.0f;//列间距
    layout.itemSize = CGSizeMake( width , width *(float)437.0f/(float)302 );//控制cell的宽高比
    layout.sectionInset = UIEdgeInsetsMake(6, 6, 6, 6);//设置间距
#define ydcolor(r,g,b) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:1]
    UICollectionView * collection = [[UICollectionView alloc]initWithFrame:CGRectMake(0, NAVHEIGHT + 45,SCREENWIDTH ,SCREENHEIGHT-45-NAVHEIGHT - 50) collectionViewLayout:layout];
    collection.backgroundColor = ydcolor(245, 245, 245);
    collection.dataSource = self;
    collection.delegate = self;
    collection.alwaysBounceVertical = YES;
    [collection registerNib:[UINib nibWithNibName:@"ELTCommodityCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"fvcell"];
    self.collection = collection;
    self.collection.showsVerticalScrollIndicator = NO;
    [self.view addSubview:self.collection];
  
}
#pragma mark - 添加购物车标示符 yd
-(void)createShopcart{
    shopCar = [BBRShopView buttonWithType:UIButtonTypeCustom];
    CGFloat centerX = 12.5f + 109.f/4.f;
    CGFloat centerY =  self.barView.frame.size.height - (13.f + 109.f/4.f);
    shopCar.center = CGPointMake(centerX, centerY);
    shopCar.bounds = CGRectMake(0, 0, 54.5f, 54.5f);
    [shopCar setImage:[UIImage imageNamed:@"elt_mycart"] forState:UIControlStateNormal];
    [shopCar.badgeview setBadgeText:@"45"];
    shopCar.badgeview.badgeOverlayColor = UIColorFromRGB(0xda2c41);
    shopCar.badgeview.badgeAlignment = JSBadgeViewAlignmentTopRight;
    shopCar.hidden = NO;
    [self.barView addSubview:shopCar];
    
}
#pragma mark -- 返回top
- (IBAction)goTopClicked:(id)sender {
    self.collection.contentOffset = CGPointMake(0, 0);
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma mark - 请求数据 yd
- (void)downRequest{
    [self.indicator startAnimatingActivit];
        [ELRequestSingle typeRequestWithBlock:^(BOOL sucess, id objc) {
            [self.indicator LoadSuccess];
            if ([objc isKindOfClass:[NSString class]]) {
                 [self showAlertViewWith:objc];
                _keyword = @"";
            [self.collection.header endRefreshing];
            [self.collection.footer noticeNoMoreData];
            }else{
            [_dataArr addObjectsFromArray:objc];
            if (_dataArr.count == 0) {
                [self.collection.footer noticeNoMoreData];
            }else{
                [self.collection.header endRefreshing];
                [self.collection.footer endRefreshing];
            }
            if(_dataArr.count < 10){
                [self.collection removeFooter];
            }
            }
            [self.collection reloadData];
            
        } andSort:_sort andAuto_code:_ID andPage:[NSString stringWithFormat:@"%ld",(long)_page] andKeyWord:[_keyword stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
    
}

#pragma mark - 请求购物车数量
-(void)downRequestShopCartNum{
    
    [ELRequestSingle shopCartNumWithRequest:^(BOOL sucess, id objc) {
        
        [_mcb.shopCar.badgeview setBadgeText:objc];
        _num = [objc integerValue];
        if ([objc integerValue] == 0) {
            _mcb.shopCar.badgeview.hidden = YES;
        }else{
            _mcb.shopCar.badgeview.hidden = NO;
        }
        
    } andAuto_code:@"10001001"];
    
}

#pragma mark - collectionViewDelegate
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.dataArr.count?self.dataArr.count:0;
}
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
        ELTCommodityCollectionViewCell * item = [collectionView dequeueReusableCellWithReuseIdentifier:@"fvcell" forIndexPath:indexPath];
        if (self.dataArr.count) {
            
            ELTFruitAndVegatableModel * model = self.dataArr[indexPath.item];
            item.model = model;
        }
        item.shoppingCarBtn.tag = indexPath.item;
        [item.shoppingCarBtn addTarget:self action:@selector(shopcartClickCell:) forControlEvents:UIControlEventTouchUpInside];
        item.backgroundColor =[ UIColor whiteColor];
        if (self.collection.contentOffset.y > SCREENHEIGHT) {
            self.goTop.hidden = NO;
        }else{
            self.goTop.hidden = YES;
        }
        return item;

}
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
      [self.indicator LoadSuccess];
    [self.indicator setIndicatorType:ActivityIndicatorLogin];
    [self.indicator startAnimatingActivit];
        ELTFruitAndVegatableModel * model = self.dataArr[indexPath.item];
        ELTCommodityDetailViewController *detail = [[ELTCommodityDetailViewController alloc]init];
     detail.detailModel = model;
        [collectionView setUserInteractionEnabled:NO];
        [ELRequestSingle typeDetailWithRequest:^(BOOL sucess, id objc) {
            [self.indicator LoadSuccess];
            _commodityArray = objc;
            detail.detailModel = _commodityArray[0];
            if ([detail.detailModel.status integerValue] == 1) {
                [self.navigationController pushViewController:detail animated:YES];
                [collectionView setUserInteractionEnabled:YES];
            }else{
            
                [self showAlertViewWith:detail.detailModel.msg];
            }
            
        } andid:model.fvId];
    
    
}
#pragma mark-  每个item的购物车点击 yd
-(void)shopcartClickCell:(UIButton *)sender{
    UIButton * btn = sender;
    ELTFruitAndVegatableModel * model = self.dataArr[btn.tag];
    
#pragma mark - 动画飞入效果
    ELTCommodityCollectionViewCell *cell=(ELTCommodityCollectionViewCell *)[_collection cellForItemAtIndexPath:[NSIndexPath indexPathForRow:btn.tag inSection:0]];
    CGRect originalFrame=[cell.iconImageView convertRect:cell.iconImageView.bounds toView:[UIApplication sharedApplication].keyWindow.rootViewController.view];
    CGRect headRect = cell.iconImageView.frame;
    headRect.origin.y = originalFrame.origin.y - 30;
    [self startAnimationWithRect:headRect ImageView:cell.iconImageView tag:btn.tag];
#pragma mark - 加入购物车
    [ELRequestSingle shopCartEditWithRequest:^(BOOL sucess, id objc) {
        
        [self downRequestShopCartNum];
    } andUid:nil andPid:model.fvId andTask:@"add_list" andNum:nil];
}


#pragma mark - 飞入效果
-(void)startAnimationWithRect:(CGRect)rect ImageView:(UIImageView *)imageView tag:(NSInteger)tag
{
    if (!_layer) {
        _layer = [CALayer layer];
        _layer.contents = (id)imageView.layer.contents;
        _layer.contentsGravity = kCAGravityResizeAspectFill;
        _layer.contentsScale = 0.5;
        _layer.bounds = CGRectMake(imageView.center.x, imageView.center.y - 30, imageView.frame.size.width/2, imageView.frame.size.height/2);
        if (tag%2 != 0) {
            rect.origin.x = rect.origin.x+SCREENWIDTH/2 +70;
        }else{
            rect.origin.x = rect.origin.x + 70;
        }
        _layer.position = CGPointMake(rect.origin.x, rect.origin.y + 80);
        [self.view.layer addSublayer:_layer];
        self.path = [UIBezierPath bezierPath];
        [_path moveToPoint:_layer.position];
        [_path addCurveToPoint:CGPointMake(40, SCREENHEIGHT - 40) controlPoint1:CGPointMake(rect.origin.x, rect.origin.y + 30) controlPoint2:CGPointMake(rect.origin.x, rect.origin.y)];
    }
    [self groupAnimation];
}
-(void)groupAnimation
{
    _collection.userInteractionEnabled = NO;
    CAKeyframeAnimation *animation = [CAKeyframeAnimation animationWithKeyPath:@"position"];
    animation.path = _path.CGPath;
    CAAnimationGroup *groups = [CAAnimationGroup animation];
    groups.animations = @[animation];
    groups.duration = 1.0f;
    groups.removedOnCompletion=NO;
    groups.fillMode=kCAFillModeForwards;
    groups.delegate = self;
    [_layer addAnimation:groups forKey:@"group"];
}
-(void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag
{
    if (anim == [_layer animationForKey:@"group"]) {
        _collection.userInteractionEnabled = YES;
        [_layer removeFromSuperlayer];
        _layer = nil;
    }
}


#pragma mark - textFieldDelegate
- (BOOL)textFieldShouldEndEditing:(UITextField *)textField{

    self.searchView.hidden = YES;
    return YES;
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    
    _keyword = textField.text;
    
    [self downRequest];
    _keyword = nil;
    textField.text = nil;
    [textField resignFirstResponder];
    return YES;
}
#pragma mark --要开始移动scrollView时调用（移除键盘）
- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    [_searchTextField resignFirstResponder];
}

@end
